<npcs>
    <npc direction="LEFT" hidden="false" id="1" name="Ethan" sprite="4" x="4" y="8">
        <speech>What was Team Galactic trying to do with other people's Pokémon?</speech>
    </npc>

    <movingNpc direction="DOWN" id="2" name="Clefairy" speed="1" sprite="35" type="pokemon" x="1" y="5">
        <path>DOWNx1, UPx1</path>
        <onCollisionSpeech gap="4">Clefffairy!!!!</onCollisionSpeech>
        <speech>Clefairy!</speech>
    </movingNpc>

    <conversation id="1">
        <speeches id="1">
            <speech>Thanks for rescuing me. This is something to show my thanks.</speech>
            <speech>It's the latest model Bicycle!</speech>
            <speech>You must take it. I insist!</speech>
        </speeches>
        <speeches id="2">
            <speech>It's the latest model so I will read the operating manual to you.</speech>
            <speech>Go to your bag and use the Bike.</speech>
            <speech>This bike has night mode sensor. The headlight turns on automatically during night.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Have you seen the Bicycle Seller?</speech>
            <speech>Me neither!</speech>
            <speech>Someone told me that he was kidnapped by some goons dressed in space looking suit.</speech>
            <speech>Does it ring any bell? Huh?</speech>
            <speech>Okay lets find him and save him!</speech>
        </speeches>
    </conversation>

</npcs>
