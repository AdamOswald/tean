<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Spring time is my favorite! The winds, the flowers, the ocean, everything is just perfect!</speech>
            <speech>My sister though really likes the winter. She loves playing with the snow!</speech>
            <speech>Could you help us find Pokémon that like the same thing as us?</speech>
        </speeches>
        <speeches id="2">
            <speech>What's that smell? Why is the room smelling so good sudenly?</speech>
           <speech>Wow!! Is that a Roselia? Can I please have it? Please Please Please Please! Please gimme Roselia....</speech>
        </speeches>
        <speeches id="3">
            <speech>NOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO!!</speech>
        </speeches>
        <speeches id="4">
            <speech>You are the best, here have 5 berries which I farmed from Floaroma.</speech>
        </speeches>
        <speeches id="5">
            <speech>The roselia is so pretty and aromatic.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Winter time is my favorite! The snow, the cold, the quilts, everything is just perfect!</speech>
            <speech>My sister though really likes the spring. She loves plucking flowers!</speech>
            <speech>Could you help us find Pokémon that like the same thing as us?</speech>
        </speeches>
        <speeches id="2">
            <speech>Why is the room suddenly so cold? Has someone turned on the A.C.?</speech>
            <speech>Wow!! Is that a Snorunt? Can I please have it? Please Please Please Please! Please gimme Snorunt....</speech>
        </speeches>
        <speeches id="3">
            <speech>NOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO!!</speech>
        </speeches>
        <speeches id="4">
            <speech>You are the best, here have 5 berries which I farmed from Floaroma.</speech>
        </speeches>
        <speeches id="5">
            <speech>Snorunt scares me sometimes by hiding inside the fridge. It is super naughty.</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Marco" randomRotation="true" sprite="37" x="9" y="5">
        <speech>Come here Morgan!!!!</speech>
    </npc>
    <movingNpc direction="UP" id="2" name="Morgan" shouldSleep="" speed="1" sprite="53" type="pokemon" x="9" y="7">
        <path>DOWNx1, RIGHTx1, UPx1, LEFTx1</path>
        <onCollisionSpeech gap="4">Persian</onCollisionSpeech>
        <speech>.....</speech>
    </movingNpc>
</npcs>
