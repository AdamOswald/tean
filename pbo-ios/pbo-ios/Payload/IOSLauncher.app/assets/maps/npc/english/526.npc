<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>I am the great mountain range of your life! Overcome me if you can!</speech>
        </speeches>
        <speeches id="2">
            <speech>If you want to reach the peak as a Trainer, you'll have to climb over me!</speech>
        </speeches>
        <speeches id="3">
            <speech>If you want to reach the peak as a Trainer, you'll have to climb over me!</speech>
        </speeches>
        <speeches id="4">
            <speech>Hahaha! I am the summit, and the road to reach me is still very steep!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>'Sup! I'll give it all I've got! Let's do our best!!</speech>
        </speeches>
        <speeches id="2">
            <speech>The sweat that drips before a battle... Don't you love how cool it is?</speech>
        </speeches>
        <speeches id="3">
            <speech>The sweat that drips before a battle... Don't you love how cool it is?</speech>
        </speeches>
        <speeches id="4">
            <speech>'Sup! That's enough, friend! You gotta value your life, yo!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Ho there! You are a mountain standing in my way, aren't ya?</speech>
        </speeches>
        <speeches id="2">
            <speech>Yahoo! Yahooooo!! Hear my cry of triumph!</speech>
        </speeches>
        <speeches id="3">
            <speech>Yahoo! Yahooooo!! Hear my cry of triumph!</speech>
        </speeches>
        <speeches id="4">
            <speech>Grrr... My victory has disappeared down into some dark crevasse...</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>All right then. Let's all be good little children and start our Pokémon lesson, shall we?</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh my... It looks like you'll be repeating this lesson.</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh my... It looks like you'll be repeating this lesson.</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh my! You've passed with flying colors!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>The battle between us two... Within and of itself, that is art.</speech>
        </speeches>
        <speeches id="2">
            <speech>Yes... I shall name this piece... The Pitiful and Somehow Unsightly Youth.</speech>
        </speeches>
        <speeches id="3">
            <speech>Yes... I shall name this piece... The Pitiful and Somehow Unsightly Youth.</speech>
        </speeches>
        <speeches id="4">
            <speech>Before we waste our time on idle chat, please show me your skills.</speech>
        </speeches>
    </conversation>

    <conversation id="11">
        <speeches id="2">
            <speech>Hi! I'm a PBO Tutorial campaign clown. Let's roll out my question!</speech>
            <speech>Can you use your trainer card to customize your appearance?</speech>
        </speeches>
        <speeches id="3">
            <speech>That's not the correct answer. Let's try again.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ding-ding!</speech>
            <speech>You're absolutely correct.</speech>
            <speech>Yes, you can customize your appearance from your trainer card!</speech>

        </speeches>
        <speeches id="5">
            <speech>Here you go! Please accept this Lum Berry!</speech>
            <speech>If held by a Pokémon, it recovers from any status problem.</speech>
        </speeches>
    </conversation>

</npcs>
