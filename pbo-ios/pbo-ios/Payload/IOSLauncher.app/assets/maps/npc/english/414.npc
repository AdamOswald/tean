<npcs>
  <conversation id="1">
      <speeches id="1">
          <speech>There's absolutely nothing past here.</speech>
          <speech>I'm not lying, I swear!</speech>
      </speeches>
      <speeches id="2">
          <speech>What?</speech>
      </speeches>
      <speeches id="3">
          <speech>Why won't you believe me ...</speech>
      </speeches>
      <speeches id="4">
          <speech>You trust me now?</speech>
      </speeches>
      <speeches id="5">
          <speech></speech>
      </speeches>
  </conversation>
  <conversation id="2">
      <speeches id="1">
          <speech>Our orders are to take you down.</speech>
          <speech>Time to fulfil them.</speech>
      </speeches>
      <speeches id="2">
          <speech>Pfft.</speech>
      </speeches>
      <speeches id="3">
          <speech>I'll live to try another day ...</speech>
      </speeches>
      <speeches id="4">
          <speech>*Radio* The intruder has been dealt-with.</speech>
      </speeches>
      <speeches id="5">
          <speech></speech>
      </speeches>
  </conversation>
</npcs>
