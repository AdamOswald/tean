<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Toss a coin to Arcanine, oh Valley of Plenty, oh Valley of Plenty, ohhh...</speech>
            <speech>Trade me your Heracross for Growlithe?, oh Valley of Plenty, oh Valley of.. Trade me???</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh boo... are my songs not good enough... for you? I bid you... adieu.</speech>
        </speeches>
        <speeches id="3">
            <speech>When a humble trainer, graced a trade along.. Dandelion of Kanto, Along came this song...</speech>
            <speech>The trainer traded, with me a Heracross, for a mighty Growlithe, and I sung...</speech>
            <speech>That trainer is a champion, oh Valley of Champions, oh Valley of Champions, ohhhhhhh...</speech>
        </speeches>
        <speeches id="4">
            <speech>When a humble bard.. graced a ride along.. Arcanine of Kanto.. Along came this song...</speech>
            <speech>... He wiped out your pest, got kicked in his chest, he's a friend of humanity...</speech>
            <speech>... So give him the rest, that's my epic tale, a champion prevailed.. defeated the villian.. now pour him some Moomoo milk!</speech>
            <speech>... Toss a coin to Arcanine, oh Valley of Plenty, oh Valley of Plenty, ohhh.</speech>
            <speech>... When a humble trainer, graced a trade along.. Dandelion of Kanto, Along came... wait.. wait.. no, I've drunk too much Moomoo milk to trade today.</speech>
            <speech>Come back on the next 14th day of the month with a Heracross, Lv.40 or higher, to trade for my Growlithe! I'll be ready then.</speech>
        </speeches>
        <speeches id="5">
            <speech>When a humble bard.. graced a ride along.. Arcanine of Kanto.. Along came this song...</speech>
            <speech>... He wiped out your pest, got kicked in his chest, he's a friend of humanity...</speech>
            <speech>... So give him the rest, that's my epic tale, a champion prevailed.. defeated the villian.. now pour him some Moomoo milk!</speech>
            <speech>... Toss a coin to Arcanine, oh Valley of Plenty, oh Valley of Plenty, ohhh.</speech>
            <speech>... When a humble trainer, graced a trade along.. Dandelion of Kanto, Along came... wait.. wait..</speech>
            <speech>no, you don't have a Heracross with you.</speech>
            <speech>... I've had no Moomoo Milk today, so I'm willing to trade...</speech>
            <speech>But you need to come back with a Heracross, Lv.40 or higher, to trade for my Growlithe! I'll be ready then.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Oh my god, you have dynite ores, don't you? Please trade them to me!! I'll give you great goodies in return!</speech>
        </speeches>
        <speeches id="2">
            <speech>But why? ...</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>Hmm, I don't see you holding any Blaze Coin. Come back to me with Blaze Coin and I can give you some Dynite Ores.</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh my god, you have Blaze Coins, don't you? I will give you 6 Dynite Ores for 1 Blaze Coin.</speech>
            <speech>Do you want to trade with me? 6 Dynite Ores for 1 Blaze Coin?</speech>
        </speeches>
        <speeches id="3">
            <speech>But why? ...</speech>
        </speeches>
        <speeches id="4">
            <speech>Thank you. Thank you. Thank You. Thank youuuuuuu!!</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Oh my god, you have Blaze Coins, don't you? Please trade them to me!! I'll give you great goodies in return!</speech>
        </speeches>
        <speeches id="2">
            <speech>But why? ...</speech>
        </speeches>
    </conversation>
    <npc direction="LEFT" hidden="false" id="8" name="Henry" sprite="39" x="23" y="6">
        <speech>You can easily trade Pokémon with Pokémon trainers around the world.</speech>
        <speech>Isn't that something?</speech>
    </npc>
    <npc direction="LEFT" hidden="false" id="1" name="Carolyn" sprite="26" x="25" y="11">
        <speech>I really want to make the Top 8 in the global rankings!</speech>
		<speech>This week, I'll do it!</speech>
    </npc>
    <npc direction="LEFT" hidden="false" id="2" name="Jeremy" sprite="4" x="16" y="13">
        <speech>The Global Terminal has three floors.</speech>
        <speech>You use warp panels for getting from one floor to another.</speech>
        <speech>The blue panel takes you to the GTS on the ground floor.</speech>
        <speech>The green panel takes you to the studios for Box Data and Dress-Up Data on 2F.</speech>
        <speech>The pink panel takes you to the third floor for the Battle Video Gallery.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="3" name="Joan" sprite="12" x="16" y="7">
        <speech>Hi, have you visited the Dress-Up Data Studio?</speech>
        <speech>Have you put yours on exhibit?</speech>
        <speech>Or do you only look at other entries?</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="4" name="Kyle" sprite="10" x="12" y="8">
        <speech>I want to be the strongest Hiker in the Sinnoh Region!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="5" name="Zachary" sprite="5" x="4" y="7">
        <speech>Let's see if I enjoy my visit here.</speech>
        <speech>A lot of people have told me to check out the Battle Video Gallery on the third floor!</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="6" name="Tyler" sprite="11" x="17" y="9">
        <speech>$PLAYER_NAME... I'm coming for you!</speech>
    </npc>
    <movingNpc direction="RIGHT" id="7" name="Totodile" shouldSleep="" speed="1" sprite="158" type="pokemon" x="17" y="7">
        <path>RIGHTx2, LEFTx2</path>
        <onCollisionSpeech gap="4">Tototototo</onCollisionSpeech>
        <speech>Toto...Totodile!</speech>
    </movingNpc>
</npcs>
