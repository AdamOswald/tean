<npc>
    <conversation id="1" canSkip="false">
        <speeches id="1">
            <speech>I was born to win, leave this place if you don't want to be humiliated</speech>
        </speeches>
        <speeches id="2">
            <speech>Good battle but I lost, How strange losing for the first time.</speech>
        </speeches>
        <speeches id="3">
            <speech>Good battle but I lost, How strange losing for the first time.</speech>
        </speeches>
        <speeches id="4">
            <speech>I win as always, you are too boring for me.</speech>
        </speeches>
        <speeches id="5">
            <speech></speech>
        </speeches>
    </conversation>

    <conversation id="2" canSkip="false">
        <speeches id="1">
            <speech>I have no mood to do anything but i can't let you pass ugh.</speech>
        </speeches>
        <speeches id="2">
            <speech>I just want to go home, do whatever you want bye.</speech>
        </speeches>
        <speeches id="3">
            <speech>I just want to go home, do whatever you want bye.</speech>
        </speeches>
        <speeches id="4">
            <speech>Don't comeback, this is so annoying and tiring.</speech>
        </speeches>
        <speeches id="5">
            <speech></speech>
        </speeches>
    </conversation>

    <conversation id="3" canSkip="false">
        <speeches id="1">
            <speech>Life is a game between snake and mouse. So I got myself a team of snake and mouse.</speech>
            <speech>Let's see how it goes.</speech>
        </speeches>
        <speeches id="2">
            <speech>Sometimes snakes wins and sometimes the mouse. It's all part of life.</speech>
        </speeches>
        <speeches id="3">
            <speech>Sometimes snake wins and sometimes the mouse. It's all part of life.</speech>
        </speeches>
        <speeches id="4">
            <speech>Meh, what a waste of time. Only if your brain was as big as your mouth.</speech>
        </speeches>
        <speeches id="5">
            <speech></speech>
        </speeches>
    </conversation>

    <conversation id="4" canSkip="false">
        <speeches id="1">
            <speech>Life orb and Sheer force!! What an annoying combination. Now give me a moment to annoy you intruder.</speech>
        </speeches>
        <speeches id="2">
            <speech>I need to train more before I can defeat someone like you.</speech>
        </speeches>
        <speeches id="3">
            <speech>I need to train more before I can defeat someone like you.</speech>
        </speeches>
        <speeches id="4">
            <speech>Two wrongs don't make a right, take your parents as an example.</speech>
        </speeches>
        <speeches id="5">
            <speech></speech>
        </speeches>
    </conversation>
</npc>