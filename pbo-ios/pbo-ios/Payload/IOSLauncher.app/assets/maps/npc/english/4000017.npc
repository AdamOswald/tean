<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Banette looks to be suggesting me to bring some kind of shard..</speech>
            <speech>Maybe I can try battling Shuppets and try again when I have around 30 shards.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Baneee ... Bane Bane Baneeee teee!!</speech>
        </speeches>
        <speeches id="2">
            <speech>*Would you like to give the Soul Shards to Banette?*</speech>
        </speeches>
        <speeches id="3">
            <speech>This Banette is very demanding.</speech>
        </speeches>
        <speeches id="4">
            <speech>Banette doesn't care anymore.</speech>
        </speeches>
        <speeches id="5">
            <speech>Baneteeee...</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>I am a member of the cult of shine lost in the valley of soul.</speech>
            <speech>We are a group of extraordinary individuals, who have gained the power to summon alternate-colored Pokemon.</speech>
            <speech>I believe the common description is "shiny Pokemon". More precisely, I have attained the power to summon a shiny new Murkrow.</speech>
            <speech>If you wish to see a demonstration of my power, then bring me 3 Honchkrow (at least Lv.45), and I shall do the rest.</speech>
        </speeches>
        <speeches id="2">
            <speech>I see you have arrived with 3 Honchkrow, as asked of you. Would you like to see a demonstration of my powers?</speech>
        </speeches>
        <speeches id="3">
            <speech>That's a shame.</speech>
        </speeches>
        <speeches id="4">
            <speech>Very well. Time for me to show you my powers - *Huazaha xhakje troyes muhyean*!!</speech>
        </speeches>
        <speeches id="5">
            <speech>And there it is, a 'shiny' Murkrow! Make sure you take great care of it!</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>I'm a shard maniac, and I love collecting Soul Shards.</speech>
            <speech>These soul absorbing shards are dropped across the Spirit World of Jvaloh.</speech>
            <speech>They hold a very high value today. Bring me 120 of these and I shall reward you a Basic Halloween Box (Gives you 2 random items from a set of 10).</speech>
        </speeches>
        <speeches id="2">
            <speech>So you have 120 Soul Shards? I will give u Halloween Box (Gives you 2 random items from a set of 10).</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmm.. Give it another thought.</speech>
        </speeches>
        <speeches id="4">
            <speech>Hmm.. Feels good. Here is your box. Good luck with it.</speech>
            <speech>If you want more of these boxes come back with 120 of those shards again.</speech>
        </speeches>
    </conversation>
</npcs>