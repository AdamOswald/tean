<npcs>
    <npc id="1000" x="20" y="37" direction="RIGHT" name="Aroma Lady Jenna" sprite="27">
        <speech>Grayroot Town is a nice and quiet town, even though it's so close to Glassmoor City.</speech>
        <speech>You'll find friendly people here, so no need to worry about that. We always try and maintain a strongly
            community-centric attitude here.
        </speech>
        <speech>I hope you enjoy yourself here, and do take some time to smell the delightful aroma of those daffodils,
            I'm sure you'll like them.
        </speech>
    </npc>
    <npc id="1001" x="43" y="36" direction="RIGHT" name="Artist Obi" sprite="28">
        <speech>The trick is to understand the subject of your art, it's surface and it's volume. Once you've done that,
            recreating it becomes much simpler.
        </speech>
        <speech>Notice how those individual branches have their own shape and texture? An artist must never try to
            suppress that natural beauty by homogenizing it.
        </speech>
        <speech>Doing that would simply mean rejecting nature's beauty, which would be a shame</speech>
    </npc>
    <npc id="1002" x="43" y="37" direction="RIGHT" name="Artist Hikai" sprite="29">
        <speech>I'll make a beautiful landscape, just you watch.</speech>
        <speech>It's going to have a lot of colour and a lot of realism, unlike the modernists who tend to favour
            abstract art over realistic pieces.
        </speech>
        <speech>Being able to replicate exactly what your senses perceive, isn't that a wonderful feeling?</speech>
    </npc>
    <conversation id="1">
        <speeches id="1">
            <speech>Greetings! Welcome to Skynet Travel Technologies!</speech>
            <speech>Would you like to travel somewhere?</speech>
        </speeches>
        <speeches id="2">
            <speech>That's unfortunate. Please come back whenever you wish to travel elsewhere.</speech>
        </speeches>
    </conversation>
    <npc id="1003" x="14" y="29" direction="DOWN" name="Artist Diallo" sprite="28">
        <speech>This place is beautiful.</speech>
        <speech>People, Pokemon, and nature are all in perfect harmony.</speech>
        <speech>I wonder if there's any other place like this on earth?</speech>
    </npc>
    <npc id="1004" x="14" y="29" direction="DOWN" name="Artist Leonardo" sprite="28">
        <speech>Life, fortune, and beauty are all greatly influenced by one's approach to life.</speech>
        <speech>The pessimists would consider this world to have nothing more than disappointment and sorrow, much like
            a glass that is half-empty.
        </speech>
        <speech>One the other hand, an optimist would see the merit in their existence and acknowledge the joys and
            beauty of life.
        </speech>
        <speech>What about you? Have you ever wondered what kind of a person you are?</speech>
    </npc>
    <conversation id="2">
        <speeches id="1">
            <speech>You want a gift, young trainer? I have a few Great Balls that I have no use for, any more.</speech>
        </speeches>
        <speeches id="2">
            <speech>And that's that. No worries.</speech>
        </speeches>
        <speeches id="3">
            <speech>Well, take these, then. I think they'll have more utility for you than me.</speech>
        </speeches>
        <speeches id="4">
            <speech>I still have a big lot back at my home. So, if you can return in 2 hours, then I can give you some
                more.
            </speech>
        </speeches>
        <speeches id="5">
            <speech></speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Is that the fourth badge I see there? Oof… Congrats I guess!</speech>
            <speech>Aurelia told me that you are ready to face them off by yourself at the old power Plant?</speech>
            <speech>Do you know how to get to the old powerplant silly?</speech>
            <speech>Come to Patthar Village and I will show you.</speech>
            <speech>Bye!!</speech>
        </speeches>
    </conversation>
</npcs>
