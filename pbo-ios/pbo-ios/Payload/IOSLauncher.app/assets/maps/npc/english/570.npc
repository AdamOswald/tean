<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Hello young trainer, would you like to travel somewhere?</speech>
        </speeches>
        <speeches id="2">
            <speech>No problems, I hope to see you again.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>...You are?</speech>
            <speech>OK, you're $PLAYER_NAME.</speech>
            <speech>I'm Riley. I'm a Trainer, yes, and it is a bit odd that I would be training here.</speech>
            <speech>Anyways, it's always nice to meet another Trainer. Here's a gift.</speech>
        </speeches>
        <speeches id="2">
            <speech>That Hidden Machine contains the move Strength. To use it outside of battle, you need the Mine Badge
                from Canalave Gym.
            </speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>Hey $PLAYER_NAME.</speech>
            <speech>I am in deep trouble. My Lucario just ran away.</speech>
            <speech>Team Galactic were trying to activate the Iron Ruins and it had some kind of effect on Lucario and
                made it go Berserk.
            </speech>
            <speech>I don't know where he is. He started running towards the South after punching me on my head.
            </speech>
            <speech>I am really worried about him. Will you help me look for him?.</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Hey $PLAYER_NAME. I did find Lucario.</speech>
            <speech>He is badly hurt and needs urgent attention.</speech>
            <speech>Can you find me a Mercury Potion?</speech>
            <speech>There is someone inside the caves who might trade you one.</speech>
            <speech>I would have done it myself but Lucario attacked me and I am injured.</speech>
        </speeches>
        <speeches id="2">
            <speech>$PLAYER_NAME, can I have the Mercury Potion?</speech>
        </speeches>
        <speeches id="3">
            <speech>But why? ...</speech>
        </speeches>
        <speeches id="4">
            <speech>You are an amazing soul. Thank you so much for the help.</speech>
            <speech>Here have the pass to the Steel Caves inside Iron Islands.</speech>
            <speech>Its a place where me and Riolu used to train.</speech>
        </speeches>
    </conversation>
</npcs>