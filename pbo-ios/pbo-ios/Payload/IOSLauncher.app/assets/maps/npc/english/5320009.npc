<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>You... You came all the way here just to save some Pokémon?</speech>
            <speech>...Though it's nothing new, I can't say I understand our boss...</speech>
            <speech>Why would he let a kid like you come and go freely...?</speech>
            <speech>We, Team Galactic, take all that we need, and eliminate what we do not.</speech>
            <speech>But anyway. You've taken the trouble to come. Let me welcome you!</speech>
            <speech>Consider it payback for your insulting me at the lake.</speech>
        </speeches>
        <speeches id="2">
            <speech>...Gah! What makes you so tough?</speech>
            <speech>Anyway I am going to release these 3 Pokemon.</speech>
            <speech>Our boss crafted a Red Chain from crystals he took from the three Pokémon.</speech>
            <speech>That Red Chain is what he needed to shackle something on Mt. Coronet.</speech>
            <speech>It's also apparently needed for creating something.</speech>
            <speech>But that's all I know. Who knows what he's planning to do up there.</speech>
        </speeches>
        <speeches id="3">
            <speech>How did you manage to get this far?</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Fuhyahya! Those Pokémon of the lakes, where do you suppose they would go?</speech>
            <speech>Nothing. Pay it no heed. A new world isn't overly interesting.</speech>
            <speech>What of it? If Cyrus is right, then Team Galactic will rule that new world.</speech>
            <speech>That's when it will be interesting. A chance to enjoy its sweets.</speech>
            <speech>I surely hope that our visionary Cyrus realizes his dream.</speech>
            <speech>I look forward to whatever our beloved leader has planned atop Mt. Coronet.</speech>
        </speeches>
        <speeches id="2">
            <speech>Humph. Saturn and even Cyrus fall to a mere child...</speech>
            <speech>Team Galactic's state of affairs is worrying...</speech>
            <speech>That plan of Cyrus's atop Mt. Coronet, too...</speech>
            <speech>Who knows if it will work. ...Hmm. Perhaps another option needs to be considered.</speech>
            <speech>One befitting the genius of Charon!</speech>
        </speeches>
    </conversation>
</npcs>