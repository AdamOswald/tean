<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>General Thanda is my master...</speech>
            <speech>And you won't go further than this!</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm sorry, my General.</speech>
        </speeches>
        <speeches id="3">
            <speech>I will always believe in my General.</speech>
        </speeches>
        <speeches id="4">
            <speech>I hope your proud of me, General!</speech>
        </speeches>
    </conversation>


    <conversation id="2">
        <speeches id="1">
            <speech>Another day, another challenger.</speech>
            <speech>I'm starting to get used to this!</speech>
        </speeches>
        <speeches id="2">
            <speech>You actually managed to beat me.</speech>
        </speeches>
        <speeches id="3">
            <speech>Good luck.</speech>
        </speeches>
        <speeches id="4">
            <speech>And another challenge completed.</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>You've come here to challenge General Thanda?</speech>
            <speech>Trust me, you won't even be able to beat me!</speech>
        </speeches>
        <speeches id="2">
            <speech>After all you beat me...</speech>
        </speeches>
        <speeches id="3">
            <speech>Trust me, you won't beat our General.</speech>
        </speeches>
        <speeches id="4">
            <speech>I warned you!</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Are you even used to this weather?</speech>
            <speech>Let's see what you've got!</speech>
        </speeches>
        <speeches id="2">
            <speech>How could such a younger like you beat me?</speech>
        </speeches>
        <speeches id="3">
            <speech>Mr. Thanda is awesome, good luck tho.</speech>
        </speeches>
        <speeches id="4">
            <speech>You have nothing.</speech>
        </speeches>
    </conversation>

    <conversation id="5">
        <speeches id="1">
            <speech>Did you defeat the previous miners?</speech>
            <speech>I will revenge them!</speech>
        </speeches>
        <speeches id="2">
            <speech>I need to train my Lapras.</speech>
        </speeches>
        <speeches id="3">
            <speech>Our General will revenge us!</speech>
        </speeches>
        <speeches id="4">
            <speech>Me, my life, and my Lapras. You had no chance anyways.</speech>
        </speeches>
    </conversation>

    <conversation id="6">
        <speeches id="1">
            <speech>I am a proud Miner.</speech>
            <speech>Let's battle!</speech>
        </speeches>
        <speeches id="2">
            <speech>I am still a proud Miner, losing is improving.</speech>
        </speeches>
        <speeches id="3">
            <speech>Your getting close, but you won't make it.</speech>
        </speeches>
        <speeches id="4">
            <speech>Proudly Miner, Miner proud!</speech>
        </speeches>
    </conversation>

    <conversation id="7">
        <speeches id="1">
            <speech>So you've beat all of my friends?</speech>
            <speech>I am the last Miner before our respected General, let's fight!</speech>
        </speeches>
        <speeches id="2">
            <speech>Know I understand how you came this far.</speech>
        </speeches>
        <speeches id="3">
            <speech>Good luck, you might have a chance to develop a great battle.</speech>
        </speeches>
        <speeches id="4">
            <speech>Good-bye!</speech>
        </speeches>
    </conversation>
</npcs>