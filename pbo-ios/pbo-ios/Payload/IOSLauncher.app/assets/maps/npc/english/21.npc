<npcs>
    <npc id="1000" x="12" y="14" direction="RIGHT" name="Engineer Tyrel" sprite="8">
        <speech>Science is marvellous! Just look at those giant windmills.</speech>
        <speech>We power all of Bijli City using the energy they generate!</speech>
        <speech>This, of course, means that we don't depend on the Power Plant, which is great!</speech>
    </npc>
    <npc id="1001" x="34" y="17" direction="LEFT" name="Lass Monet" sprite="12">
        <speech>Oh please ... this is such nonsense!</speech>
        <speech>Sorry, I was reading this book called "I don't overreact" by Anakin Skywalker.</speech>
        <speech>I mean, sure ...</speech>
    </npc>
    <npc id="1002" x="16" y="14" direction="LEFT" name="Engineer Macron" sprite="8">
        <speech>The city uses a lot of electricity, especially that fancy Gym.</speech>
        <speech>So, to solve the issue, they finally switched to wind-based energy.</speech>
        <speech>Not only is it clean, but it works spendidly in this high altitude terrain.</speech>
        <speech>If only other cities could be as innovative, the world would be better place for sure!</speech>
    </npc>
    <npc id="1003" x="21" y="37" direction="LEFT" name="Pokefan Juliana" sprite="18">
        <speech>I've been hearing a lot about those nasty people, who go around calling themselves priests of justice.</speech>
        <speech>They haven't been spotted in Bijli City yet, though.</speech>
    </npc>
    <npc id="1005" x="11" y="19" direction="DOWN" name="" sprite="162">
        <speech>Bijli City Gym</speech>
        <speech>Leader: Elleak - The perky, electric superstar</speech>
    </npc>
    <npc id="1006" x="6" y="20" direction="DOWN" name="" sprite="162">
        <speech>It's an air vent that exchanges the underground tunnels' air</speech>
    </npc>
    <npc id="1007" x="24" y="20" direction="DOWN" name="" sprite="162">
        <speech>It's an air vent that exchanges the underground tunnels' air</speech>
    </npc>
    <npc id="1008" x="25" y="20" direction="DOWN" name="" sprite="162">
        <speech>It's an air vent that exchanges the underground tunnels' air</speech>
    </npc>

    <conversation id="2">
        <speeches id="1">
            <speech>Oh dear, what do I do now?! This is going to be a whole lotta trouble!</speech>
            <speech>Say, youngster, could you help me out of my predicament?</speech>
            <speech>I've gone and dropped some Rindo berries on my way here, ya see.</speech>
            <speech>Now I've got this urgent shipment to deliver down at Patthar Village, and I ain't got much time to be lookin' around.</speech>
            <speech>Could ya please help me fix this mess by finding those berries?</speech>
            <speech>I'm sure they're at Route 3, cuz I just came from up there.</speech>
            <speech>It'd be a real big help. There's four of them, if I remember correctly</speech>
        </speeches>
        <speeches id="2">
            <speech>So ya found them, after all! That's brilliant! Could ya pass them to me now?</speech>
        </speeches>
        <speeches id="3">
            <speech>Don't ya want to help an old man out of his problem, youngster?</speech>
        </speeches>
        <speeches id="4">
            <speech>Thanks a ton, youngster! As a reward, take these Leppa Berries. I betcha they'd help ya sometime!</speech>
        </speeches>
        <speeches id="5">
            <speech>Ya just saved me and a lotta people a lotta trouble, so a big thanks once again!</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>Oh dear, what do I do now?! This is going to be a whole lotta trouble!</speech>
            <speech>Say, youngster, could you help me out of my predicament?</speech>
            <speech>I've gone and dropped some Rindo berries on my way here, ya see.</speech>
            <speech>Now I've got this urgent shipment to deliver down at Patthar Village, and I ain't got much time to be lookin' around.</speech>
            <speech>Could ya please help me fix this mess by finding those berries?</speech>
            <speech>I'm sure they're at Route 3, cuz I just came from up there.</speech>
            <speech>It'd be a real big help. There's four of them, if I remember correctly</speech>
            <speech>I will also go lookin for em.</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Yayy!! Yayy!!</speech>
            <speech>Good job $PLAYER_NAME!</speech>
            <speech>I am so glad to see both of us getting stronger gym by gym.</speech>
            <speech>I heard that entire Jvaloh is powered by the new Powerplant which is located south of Route 3 Cliffs.</speech>
            <speech>Come with me, lets check it out!</speech>
        </speeches>
    </conversation>

    <conversation id="5">
        <speeches id="1">
            <speech>I should check out the new Power Plant with $JVALOH_RIVAL_NAME before I leave town.</speech>
        </speeches>
    </conversation>
</npcs>
