<npc>
    <!--<conversation id="1">
        <speeches id="1">
            <speech>Oh my god, you have rainbow shards, don't you? Please trade them to me!! I'll give you great goodies in return!</speech>
        </speeches>
        <speeches id="2">
            <speech>But why? ...</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Hey kid, listen up. Do you happen to have found any small shards, glowing in various colors?</speech>
            <speech>Some people refer to them as 'Rainbow shards'. You see, I'm a collector of those shards, and gathering them is my passion.</speech>
            <speech>So if you manage to gather at least 4 of them, then make sure to come to me. I'll even give you a Charmander, if you can fulfil my requirement.</speech>
            <speech>Also, don't go to these other noobs. They're not worth your time.</speech>
        </speeches>
        <speeches id="2">
            <speech>Could that be ... RAINBOW SHARDS?!! Gimme, please! I will give you a Charmander</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh, the woe ...</speech>
        </speeches>
        <speeches id="4">
            <speech>Brilliant! I can tell by just looking that it's the real deal. Here's your Charmander, kid. Take good care of it!</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>Hi there! Would you happen to have some small shard with you, perchance? The one I'm referring to glows in multiple colors, and is shaped like a wing.</speech>
            <speech>Some people refer to them as 'Rainbow shards'. As for me, well I am a collector of these shards.</speech>
            <speech>Let me give you a proposition - bring me 4 such shards, and I'll give you a Squirtle. What do you say?</speech>
            <speech>Also, you shouldn't waste your time by speaking to the others here. There's no point to it.</speech>
        </speeches>
        <speeches id="2">
            <speech>Are those rainbow shards? Oh, wow. May I have them for a Squirtle?</speech>
        </speeches>
        <speeches id="3">
            <speech>How painful ...</speech>
        </speeches>
        <speeches id="4">
            <speech>Fantastic! Here's your Squirtle, youngster. Please take care of it!</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Well, hello! Nice to meet you, traveller. Is there any chance that you're in possession of some small shards that shine brightly in various colors?</speech>
            <speech>Some people refer to them as 'Rainbow shards'. Me? I am a collector of these shards, of course!</speech>
            <speech>In fact, I'm willing to make a deal with you - bring me 4 such shards and I shall bestow upon you the Pokemon known as Bulbasaur.</speech>
            <speech>What do you think? Also, as a precautionary warning - the other individuals in this room will waste your time, so don't go to them.</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh wow, you did manage to find 4 rainbow shards after all.</speech>
            <speech>Could I actually have them for a Bulbasaur?</speech>
        </speeches>
        <speeches id="3">
            <speech>How cruel of you!</speech>
        </speeches>
        <speeches id="4">
            <speech>Spendid! Many thanks to you! As promised, here is your Bulbasaur. Please do take good care of it!</speech>
        </speeches>
    </conversation>-->
    <movingNpc direction="DOWN" id="1" name="Bruto" shouldSleep="" speed="1" sprite="10" type="npc" x="4" y="5">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4">Where could they have taken him...</onCollisionSpeech>
        <speech>Where could they have taken him...</speech>
        <speech>Where could they have taken him...</speech>
    </movingNpc>
</npc>
