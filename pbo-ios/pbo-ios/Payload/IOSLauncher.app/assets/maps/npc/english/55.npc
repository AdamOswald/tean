<npcs>
    <npc direction="DOWN" id="1000" name="Lass Julia" sprite="12" x="27" y="15">
        <speech>Did you know that fall is another word for autumn?</speech>
        <speech>It's the season when leaves fall from the trees, isn't it beautiful?</speech>
    </npc>
    <npc direction="LEFT" id="1001" name="Pokefan Zusa" sprite="63" x="54" y="45">
        <speech>Please take good care of your pokemon.</speech>
        <speech>When you do encounter wild pokemon you want to catch, try catching them straight away instead of hurting
            them.
        </speech>
    </npc>
    <npc direction="RIGHT" id="1002" name="Monk Gilbert" sprite="167" x="45" y="33">
        <speech>The cycle of the seasons, the cycle of life, it's all the same.</speech>
        <speech>Have you ever thought about it?</speech>
        <speech>I guess you haven't...</speech>
    </npc>
    <npc direction="LEFT" id="1003" name="Youngster Isak" sprite="4" x="36" y="8">
        <speech>Fishies! Nothing but fishies!</speech>
        <speech>What's your favorite fishie? Mine's Finneon!</speech>
    </npc>
    <npc direction="UP" id="1004" name="Tourist Ludz" randomRotation="true" sprite="108" x="44" y="14">
        <speech>I love swimming and I haven't seen any river as clean as this.</speech>
        <speech>It's also said that bathing in this holy river washes all your sins.</speech>
    </npc>
    <npc direction="DOWN" id="1005" name="Preschooler Burt" sprite="71" x="17" y="13">
        <speech>My little sister cries a lot.</speech>
        <speech>I always tell her she can lean on me, I'm always there for her!</speech>
    </npc>
    <npc direction="DOWN" id="1006" name="Preschooler Sheena" randomRotation="true" sprite="82" x="18" y="13">
        <speech>I couldn't imagine my life without my brother Burt.</speech>
        <speech>He's the best brother in the whole wide world, he means a lot to me!</speech>
    </npc>
    <npc direction="UP" id="1007" name="Backpacker Dill" sprite="108" x="25" y="34">
        <speech>I'm always prepared to go anywhere. I've got everything I need in my backpack.</speech>
        <speech>I've got a special pouch for all my berries. They can really be a life-saver in battles.</speech>
    </npc>
    <npc direction="LEFT" id="1008" name="Monk Jom" sprite="167" x="4" y="25">
        <speech>Long ago a mythical bird burnt this place down to the ground.</speech>
        <speech>Today we refer to that occassion as "The Great Blaze"</speech>
        <speech>That mythical bird is Ho-Oh, you might have spotted its statue down below.</speech>
    </npc>
    <npc direction="LEFT" id="1009" name="Monk Phill" sprite="167" x="4" y="28">
        <speech>After The Great Blaze there was a whole area of nothingness.</speech>
        <speech>Until Ho-Oh's Sacred Fire brought this town back to life.</speech>
        <speech>The trees, the Pokemon, the people... It's all back because of the Sacred Fire.</speech>
    </npc>
    <npc direction="DOWN" id="1010" name="Fishing Expert Zolander" sprite="16" x="38" y="20">
        <speech>Whatever fish I catch, I always release it straight away.</speech>
        <speech>It's just wrong to derive these fish from their freedom.</speech>
        <speech>They too should be allowed to enjoy the beauty of nature in a free state that they deserve to live in.
        </speech>
    </npc>
    <npc direction="LEFT" id="1011" name="Lady Promilia" randomRotation="true" sprite="55" x="8" y="20">
        <speech>The purpose of elders' advice is to ensure that the young do not mirror the mistakes of the past,</speech>
        <speech>and therein lies the value in the words of old folk.</speech>
    </npc>
    <npc direction="UP" id="1012" name="Gentleman Olan" sprite="5" x="9" y="20">
        <speech>Age is not a much better instructor than youth, for it has not profited as much as it has lost.</speech>
    </npc>
    <conversation id="1">
        <speeches id="1">
            <speech>Greetings! Welcome to Skynet Travel Technologies!</speech>
            <speech>Would you like to travel somewhere?</speech>
        </speeches>
        <speeches id="2">
            <speech>That's unfortunate. Please come back whenever you wish to travel elsewhere.</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="2">
        <speeches id="1">
            <speech/>
        </speeches>
        <speeches id="2">
            <speech>It's a statue in honor of Ho-Oh. There appears to be some text engraved onto it:</speech>
            <speech>"Behold the glory of the flame;"</speech>
            <speech>" of death and rebirth; of purity and cleansing~"</speech>
            <speech>"Behold the glory of the sacred fire;"</speech>
            <speech>" that knows the truth in one's heart~"</speech>
            <speech>"Behold the glory of the phoenix;"</speech>
            <speech>" as it watches over this land~"</speech>
            <speech>"Behold the glory of Ho-Oh;"</speech>
            <speech>" the harbinger of joy and the wielder of the flame~"</speech>
            <speech>The rest of the text seems too faded to read, but some odd patterns are carved next to the words.</speech>
            <speech>They seem to resemble feathers, of some kind.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Hello young trainer.</speech>
            <speech>Have you won your 6th badge?</speech>
            <speech>Oh then you must have not met Blitz yet.</speech>
            <speech>He is the 6th Gym Leader and the protector of the Sacred Volcanoes.</speech>
            <speech>He has not returned from a few days, so I am just looking for him.</speech>
            <speech>No, don't worry about it. I will find him. He must be meditating somewhere.</speech>
            <speech>I will see you later.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Its been more than a week since we last saw Blitz.</speech>
            <speech>To be honest with you, I have started getting worried now...</speech>
            <speech>You have 5 badges? You are looking for him too?</speech>
            <speech>Go and look in the Volcanoes. You can access them from the east exit of this town.</speech>
        </speeches>
    </conversation>

    <conversation id="6">
        <speeches id="1">
            <speech>Thanks for the help kid!!!</speech>
            <speech>Thanks for weakening the Ho-Oh for me.</speech>
            <speech>I will now finish doing what I came here for.</speech>
        </speeches>
        <speeches id="2">
            <speech>***Osiris captures Ho-Oh***</speech>
            <speech>It is almost time! We will be together soon honey.</speech>
            <speech>Finish him Horus!</speech>
        </speeches>
    </conversation>

    <conversation id="7">
        <speeches id="1">
            <speech>**Ho-Oh roars!!!**</speech>
        </speeches>
        <speeches id="2">
            <speech>**Ho-Oh roars in pain!!!**</speech>
        </speeches>
    </conversation>

    <conversation id="8">
        <speeches id="1">
            <speech>That amulet you dropped before… Who gave you that?</speech>
            <speech>**You explain that your mom gave you that.**</speech>
            <speech>Oh, so that's what I suspected! You don't look so smart I will break this down to you.</speech>
            <speech>I have the same amulet, It is the only thing I had on me when I was kidnapped by my master.</speech>
            <speech>This amulet was handed to me by my mom, the exact same amulet built from exact same raw products.</speech>
            <speech>Let me take off my mask for you to see how similar we look...</speech>
        </speeches>
        <speeches id="2">
            <speech>Master Osiris has raised me, and I am devoted to him and his cause.</speech>
            <speech>I don't know how to say it, but I am happy that I’ve found you even though I still think you are annoying.</speech>
            <speech>Please stop trying to ruin our cause because you are not strong enough.</speech>
            <speech>I don't want to hurt you.</speech>
            <speech>I hope you understand this and stay away from mission.</speech>
            <speech>I am leaving you this time but the next time I might have to step in and end this once and for all.</speech>
            <speech>Sorry little one...</speech>
            <speech>Oh and also tell your little friend to stay away as well. She is hiding in the PokeCenter.</speech>
        </speeches>
    </conversation>

    <conversation id="9">
        <speeches id="1">
            <speech>Catch the Ho-Oh, help me revive my Wife my dear kids.</speech>
        </speeches>
    </conversation>
</npcs>
