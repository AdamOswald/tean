<npcs>
    <npc direction="DOWN" id="1000" name="Lady Beatrice" randomRotation="true" sprite="73" x="44" y="36">
        <speech>Hello, young trainer! How are you?</speech>
        <speech>Great, let me take a selfie with you!</speech>
        <speech>I love it!</speech>
    </npc>
    <npc direction="DOWN" id="1001" name="Tom" randomRotation="true" sprite="80" x="18" y="26">
        <speech>Ewwww, it's taking me forever to pass.</speech>
        <speech>I almost made it, but, ewwwww!</speech>
    </npc>
    <npc direction="UP" id="1002" name="Trainer Dane" randomRotation="true" sprite="102" x="4" y="2">
        <speech>Whatsupppp my boy, let's see which Pokémon live in this area!</speech>
        <speech>I'm going to catch them all!</speech>
    </npc>
    <conversation id="1">
        <speeches id="1">
            <speech>It's such a wonderful day for picnic, but a true picnicker knows that every day is good for
                picnic!
            </speech>
        </speeches>
        <speeches id="2">
            <speech>Oh well, we have lost the fight, but we'll enjoy the picnic!</speech>
        </speeches>
        <speeches id="3">
            <speech>Hum hum hum, humming your favourite song and enjoying a picnic with your dearest friends is
                wonderful!
            </speech>
        </speeches>
        <speeches id="4">
            <speech>I'll be out here enjoying the picnic with my Pokemon, come by again!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>A true ace trainer overcomes every obstacle, let's ee what you got!</speech>
        </speeches>
        <speeches id="2">
            <speech>I've heard of you from the other ace trainers, but i didn't expect you'd be this strong.</speech>
        </speeches>
        <speeches id="3">
            <speech>I got to work a lot more in order to beat you in our rematch.</speech>
        </speeches>
        <speeches id="4">
            <speech>You gave me quite the hard time, but in the end you were not much.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>I go around the region exorcising evil ghosts whenever i am called out for, lately some group called
                "Hexers" is causing trouble as well.
            </speech>
        </speeches>
        <speeches id="2">
            <speech>You've grown very close with your Pokemon, i can very much sense it through the battle we just had,
                your future holds great surprises for you.
            </speech>
        </speeches>
        <speeches id="3">
            <speech>I better rush and get to my next exorcism appointment!</speech>
        </speeches>
        <speeches id="4">
            <speech>I had already forseen your defeat here, you're to grow stronger, go train, your future will be very
                hectic and busy.
            </speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Hmm, hey you there, could you tell me the way to Glassmoor, i got a date to catch on there, but then
                again that can wait, you look quite strong, let's try you out.
            </speech>
        </speeches>
        <speeches id="2">
            <speech>Oh you're strong indeed, my eyes did not deceive me, i wouldn't mind going on a date with you
                either, but i have to rush now! *Winks*
            </speech>
        </speeches>
        <speeches id="3">
            <speech>Thank you for telling me the direction, give me a call if you want to meet some time! *Wink*
            </speech>
        </speeches>
        <speeches id="4">
            <speech>I guess i was wrong, i better hurry or i'll be late for my date.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Gah, where did she go!</speech>
            <speech>Oh, hello there, did you see a girl having picnic around here? We were supposed to come out here
                together, but she got overexcited and rushed off!
            </speech>
        </speeches>
        <speeches id="2">
            <speech>Oh my, you're quite something, but i can't chit chat here any longer, i better go find her!</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh, so she's down the path? Thank you!</speech>
        </speeches>
        <speeches id="4">
            <speech>Damn, did i underestimate myself? This was quite easy!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Hi there, did you perhaps see a flying Pokémon around here? Oh, I'm sorry, my name is Fern, i often
                take the bird Pokémon I take care of out here to spread their wings a bit.
            </speech>
            <speech>Anyway, if you encounter it be careful because it's quite strong, let's see if you'll be able to
                take on it.
            </speech>
        </speeches>
        <speeches id="2">
            <speech>Hohoho, you're quite strong, you got nothing to fear, have fun on your journey!</speech>
        </speeches>
        <speeches id="3">
            <speech>Where did that little rascal go, i'll scold him once he comes back!</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh, you better watch out cause if you couldn't beat me, you might be in deep trouble against that
                little troublemaker!
            </speech>
        </speeches>
    </conversation>
</npcs>
