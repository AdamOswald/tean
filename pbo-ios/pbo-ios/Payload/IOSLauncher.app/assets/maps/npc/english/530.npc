<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Psy.. Psy...? Psy????</speech>
            <speech>Do you want to use Secret Potion on Psyducks?</speech>
        </speeches>
        <speeches id="2">
            <speech>Psy.. Psy....... PSYYYDUCKKKK...</speech>
        </speeches>
        <speeches id="3">
            <speech>Psy.. Psy....... Psyduck...</speech>
            <speech>*Psyducks are looking healthier again.*</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Psyducks are looking at you with utter confusion...</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Psyducks are looking at you with utter confusion...</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Even if it's tough, even if it's painful, I'mma do it! I'm a Trainer, dagnabbit!</speech>
        </speeches>
        <speeches id="2">
            <speech>I looked cool throwing my Pok Ball. But I got distracted, so I lost.</speech>
        </speeches>
        <speeches id="3">
            <speech>I looked cool throwing my Pok Ball. But I got distracted, so I lost.</speech>
        </speeches>
        <speeches id="4">
            <speech>Blast it all! And it's all mah own fault! I've gotta apologize to mah sweet Pokémon!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>I'm being marketed as an idol who can sing, dance, and skate, but it's just no good.</speech>
        </speeches>
        <speeches id="2">
            <speech>I can sing, dance, and skate. Now I'll try to become an idol who can battle, too.</speech>
        </speeches>
        <speeches id="3">
            <speech>I can sing, dance, and skate. Now I'll try to become an idol who can battle, too.</speech>
        </speeches>
        <speeches id="4">
            <speech>When I stop and think about it, being dressed like this all the time makes me more of a comedian than an idol.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>There's a lot that goes into being a Pokémon Breeder.</speech>
        </speeches>
        <speeches id="2">
            <speech>The hardest part of this job is saying farewell to Pokémon.</speech>
        </speeches>
        <speeches id="3">
            <speech>The hardest part of this job is saying farewell to Pokémon.</speech>
        </speeches>
        <speeches id="4">
            <speech>The most fun part of this job is getting close to Pokémon.</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>My big brother who never comes out of his room told me to come check this place out for him.</speech>
        </speeches>
        <speeches id="2">
            <speech>I'll let my big brother know that this is a scary place.</speech>
        </speeches>
        <speeches id="3">
            <speech>I'll let my big brother know that this is a scary place.</speech>
        </speeches>
        <speeches id="4">
            <speech>I'll let my big brother know that this is a fun place.</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>You get as much love as you give when you're dealing with Pokémon...</speech>
        </speeches>
        <speeches id="2">
            <speech>The only thing I still believe in... is my Pokémon...</speech>
        </speeches>
        <speeches id="3">
            <speech>The only thing I still believe in... is my Pokémon...</speech>
        </speeches>
        <speeches id="4">
            <speech>Pokémon...are nice... They may be selfish, but they won't betray you.</speech>
        </speeches>
    </conversation>
    <conversation id="12">
        <speeches id="1">
            <speech>Hmm, do you discipline your Pokémon? Pampering them too much is no good.</speech>
        </speeches>
        <speeches id="2">
            <speech>The only thing I still believe in... is my Pokémon...</speech>
        </speeches>
        <speeches id="3">
            <speech>The only thing I still believe in... is my Pokémon...</speech>
        </speeches>
        <speeches id="4">
            <speech>Too much praise can spoil both Pokémon and people.</speech>
        </speeches>
    </conversation>
</npcs>
