<npcs>
    <npc direction="UP" id="1000" name="Random Girl Chloe" randomRotation="true" sprite="195" x="7" y="43">
        <speech>...</speech>
        <speech>I don't know you.</speech>
        <speech>I don't obey you.</speech>
        <speech>Get out of my way.</speech>
    </npc>
    <npc direction="DOWN" id="1001" name="Gentleman Hawk" sprite="5" x="12" y="31">
        <speech>I am afraid of sending my children out to play. A lot of children have been kidnapped off late.</speech>
        <speech>I am trying to figure out who is behind all this.</speech>
    </npc>
    <npc direction="DOWN" id="1002" name="Gentleman Ashton" randomRotation="true" sprite="5" x="12" y="23">
        <speech>Do you like my name? It was named after a failed Pokémon trainer because my parents considered me as a failure.</speech>
    </npc>
    <npc direction="UP" id="1003" name="Fisherman Ryan" randomRotation="true" sprite="16" x="24" y="30">
        <speech>Horus? Osiris?</speech>
        <speech>Are you all right kid? Who name themselves after egyptian gods?</speech>
    </npc>
    <npc direction="UP" id="1004" name="Aroma Lady Lauren" randomRotation="true" sprite="18" x="24" y="26">
        <speech>I used to be an Aroma lady, but they fired me once I switched my deodrant.</speech>
    </npc>
    <npc direction="DOWN" id="1005" name="Seller Shyam" sprite="137" x="30" y="41">
        <speech>Even though I own a shop, I have nothing to sell. I just stand here and waste everyone's time.</speech>
        <speech>See I just wasted yours.</speech>
    </npc>
    <npc direction="UP" id="1006" name="Delivery Man Harsh" randomRotation="true" sprite="133" x="19" y="42">
        <speech>Osiris? The priest?</speech>
        <speech>Oh, I used to visit him in Amberwick.</speech>
        <speech>He left Amberwick few years ago due to the death of his wife. I have no idea where he is now.</speech>
    </npc>
    <npc direction="DOWN" id="1007" name="Investigator Ali Gator" randomRotation="true" sprite="62" x="37" y="10">
        <speech>There is something inside the bin I am sure.</speech>
        <speech>Nah its just thrash.</speech>
    </npc>
    <conversation id="1">
        <speeches id="1">
            <speech>Greetings! Welcome to Skynet Travel Technologies!</speech>
            <speech>Would you like to travel somewhere?</speech>
        </speeches>
        <speeches id="2">
            <speech>That's unfortunate. Please come back whenever you wish to travel elsewhere.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Greetings! Welcome to the Bank of Jvaloh's ATM system!</speech>
            <speech>Would you like to withdraw or deposit money?</speech>
        </speeches>
        <speeches id="2">
            <speech>Please return whenever you wish to make a transaction.</speech>
        </speeches>
        <speeches id="3">
            <speech>This feature is available only to people with a 'bank membership'.</speech>
            <speech>For all non-members, our bank's main branch in Bijli City is available for use.</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="3">
        <speeches id="1">
            <speech>Who are you and why are you coming out of my house?</speech>
            <speech>*$PLAYER_NAME explains everything.*</speech>
            <speech>I see, I think the boy must be a part of the local gang who have made our lives tough out here.
            </speech>
            <speech>They keep robbing houses, stealing valuables. The local police has not located them yet.</speech>
            <speech>Be careful though, the adult gang members are pretty strong.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Hey $PLAYER_NAME!</speech>
            <speech>Did you find anything about their motives?</speech>
            <speech>Well I spoke with locals around and have some data.</speech>
            <speech>Horus's master name is Osiris. He used to be the most respected priest in Jvaloh.</speech>
            <speech>But one day an explosion occurred in Jvaloh. He lost his wife in that explosion.</speech>
            <speech>Since then he went rogue.</speech>
            <speech>This is all I have right now, lets speak to locals and gather as much information as possible.</speech>
        </speeches>
    </conversation>
</npcs>
