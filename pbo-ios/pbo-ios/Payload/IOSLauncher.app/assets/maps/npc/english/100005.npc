<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>I don't think you can pass this barrier without answering the question..</speech>
        </speeches>
    </conversation>

    <conversation id="2" canSkip="false">
        <speeches id="1">
            <speech>I believe it's time for a puzzle?</speech>
        </speeches>
        <speeches id="2" canSkip="false">
            <speech>People fear it due to a belief that it devours any who try to cut down trees in its forest, but to the Pokémon it shares its woods with, it's kind.</speech>
            <speech>Which Pokemon is it?</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh my, oh my, oh my. That's absolutely, definitely not the right correct wrong answer, it's not.
            </speech>
            <speech>In others words, you have failed.</speech>
        </speeches>
        <speeches id="4">
            <speech>No, no, no, hahahahaha. That's not the wrong answer!</speech>
            <speech>Silly you, continue!</speech>
        </speeches>
        <speeches id="5">
            <speech>Silly you, continue!</speech>
        </speeches>
        <speeches id="6">
            <speech>Come back in 2 minutes.</speech>
        </speeches>
    </conversation>

    <conversation id="3" canSkip="false">
        <speeches id="1">
            <speech></speech>
        </speeches>
        <speeches id="2">
            <speech>You stupid witch, what are you trying to do. Why have you captured that Fennekin?</speech>
            <speech>Leave that Fennekin aside.</speech>
            <speech>Zhhhh Zhhhhh ZHhhhhh....</speech>
            <speech>*Spell seems to be having no effect*</speech>
            <speech>What is happening why am I not able to control you.</speech>
        </speeches>
    </conversation>

    <conversation id="4" canSkip="false">
        <speeches id="1">
            <speech></speech>
        </speeches>
        <speeches id="2">
            <speech>Bwahahahahah</speech>
            <speech>So you thought you can stop me?</speech>
            <speech>This Fennekin is immensly powerful. Powerful to an extent that you cannot imagine.</speech>
            <speech>I am leaving to capture Giratina. Stop wasting your time on me. I will be your ruler soon.</speech>
            <speech>*Chamunda uses a spell and disappears.*</speech>
        </speeches>
    </conversation>
</npcs>