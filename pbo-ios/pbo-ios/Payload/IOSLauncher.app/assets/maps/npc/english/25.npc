<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Wow, look at that! How big is that Power Plant.</speech>
            <speech>Let's go and check it out from the inside.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>I've been studying every single day, so I'm taking a break for a change.</speech>
        </speeches>
        <speeches id="2">
            <speech>Ah, my Pokémon lost... Maybe I'll stick to studying.</speech>
        </speeches>
        <speeches id="3">
            <speech>Ah, my Pokémon lost... Maybe I'll stick to studying.</speech>
        </speeches>
        <speeches id="4">
            <speech>You see, playing with Pokémon is fun. I want to study Pokémon.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>The problem is knowing whether to put your full force into the starting dash or the last spurt of effort.</speech>
        </speeches>
        <speeches id="2">
            <speech>All right! The starting dash decided our battle!</speech>
        </speeches>
        <speeches id="3">
            <speech>All right! The starting dash decided our battle!</speech>
        </speeches>
        <speeches id="4">
            <speech>Aww... If only you could have saved some strength for the last spurt of effort...</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>I won't be going easy on you just because you're a kid. Bring it on!</speech>
        </speeches>
        <speeches id="2">
            <speech>Harrumph. I'm still weak. I pity my Pokémon...</speech>
        </speeches>
        <speeches id="3">
            <speech>Harrumph. I'm still weak. I pity my Pokémon...</speech>
        </speeches>
        <speeches id="4">
            <speech>Heh. You can't do battle if you're afraid of losing.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>My research will lead this world to peace and joy.</speech>
        </speeches>
        <speeches id="2">
            <speech>My experiment failed, so I'm finished in the academic world.</speech>
        </speeches>
        <speeches id="3">
            <speech>My experiment failed, so I'm finished in the academic world.</speech>
        </speeches>
        <speeches id="4">
            <speech>I am a genius... I am not supposed to lose against someone like you...</speech>
        </speeches>
    </conversation>
</npcs>
