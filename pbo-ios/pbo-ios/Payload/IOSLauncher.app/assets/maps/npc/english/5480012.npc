<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>It bothers me that people always misunderstand me. I'm a lot more pure than everyone thinks.</speech>
        </speeches>
        <speeches id="2">
            <speech>I really don't want my skin to burn, so I want to stay in the shade while I work.</speech>
        </speeches>
        <speeches id="3">
            <speech>I really don't want my skin to burn, so I want to stay in the shade while I work.</speech>
        </speeches>
        <speeches id="4">
            <speech>My body and mind aren't necessarily always in sync.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>The pretty-suited Pokémon soldier who sprinkles love on the world appears!</speech>
        </speeches>
        <speeches id="2">
            <speech>Maybe I lose because I'm paying more attention to praying than to battling.</speech>
        </speeches>
        <speeches id="3">
            <speech>Maybe I lose because I'm paying more attention to praying than to battling.</speech>
        </speeches>
        <speeches id="4">
            <speech>I can't be defeated yet... I still have to protect all that is pretty in the world...</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Yo!</speech>
        </speeches>
        <speeches id="2">
            <speech>Yo!</speech>
        </speeches>
        <speeches id="3">
            <speech>Yo!</speech>
        </speeches>
        <speeches id="4">
            <speech>Yo! Yo! Yo!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>There aren't as many people battling at work these days because they've moved on to the Contest Spectacular.</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm tired of losing battles. Maybe I'll try going to the Contest Spectacular...</speech>
        </speeches>
        <speeches id="3">
            <speech>I'm tired of losing battles. Maybe I'll try going to the Contest Spectacular...</speech>
        </speeches>
        <speeches id="4">
            <speech>The Contest Spectacular is just superficial. It's just not in my nature at all.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>You seem quite confident. I'll sink you straightaway.</speech>
        </speeches>
        <speeches id="2">
            <speech>Yes... You have good Pokémon... Pokémon must be happy to be raised by you...</speech>
        </speeches>
        <speeches id="3">
            <speech>Yes... You have good Pokémon... Pokémon must be happy to be raised by you...</speech>
        </speeches>
        <speeches id="4">
            <speech>AAAH! I am sooo scared! I will never do it again... Sorry!</speech>
        </speeches>
    </conversation>
</npcs>
