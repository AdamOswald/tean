<npcs>
    <npc id="1000" name="Guard" type="speech" hidden="false" sprite="126" x="15" y="5" direction="DOWN"
         triggerX="15" triggerY="7">
        <speech>Please be careful if you decide to cross the desert. It's risky out there!</speech>
    </npc>
    <conversation id="1">
        <speeches id="1">
          <speech></speech>
        </speeches>
        <speeches id="2">
            <speech>Hey, if it isn't $PLAYER_NAME? How've you been? Also, did you manage to beat Gym 4 yet?</speech>
        </speeches>
        <speeches id="3">
            <speech></speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
          <speech></speech>
        </speeches>
        <speeches id="2">
            <speech>Oh, hai there! I've been great, yeah!</speech>
            <speech>I did beat Gym 4, yes. But there's something more important that I'm worried about, right now</speech>
        </speeches>
        <speeches id="3">
            <speech></speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
          <speech></speech>
        </speeches>
        <speeches id="2">
            <speech>I'm not sure if you've noticed, but there are a bunch of shady people running around Jvaloh.</speech>
            <speech>I've seen them more than once now. They call themselves 'Team Chaos', but it's not the name that I'm interested in -</speech>
            <speech>From what I've seen, these guys are up to no good. Although I don't know what it is that they're up to, I'm pretty damn sure that it's something big ...</speech>
            <speech>At least, that's what I understood from my encounter with their boss ... *$PLAYER_NAME narrates the whole story*</speech>
        </speeches>
        <speeches id="3">
            <speech></speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
          <speech></speech>
        </speeches>
        <speeches id="2">
            <speech>'Team Chaos', eh? That's a pathetic name.</speech>
            <speech>But, come to think of it, that's very similar to what those losers we beat earlier called themselves, isn't it, Ayaan?</speech>
            <speech>Yeah, I think that was it. Pesky idiots, they're just wasting everyone's time.</speech>
            <speech>I gotta admit, though, your description of that hidden cavern and power plant interests me. Maybe we should check it out too, no?</speech>
        </speeches>
        <speeches id="3">
            <speech></speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
          <speech></speech>
        </speeches>
        <speeches id="2">
            <speech>Well, if those guys are going around causing trouble for everyone, I think it's fair to give the abandoned cavern a visit.</speech>
            <speech>I'll tag along, actually. Maybe we'll find something worthwile there.</speech>
            <speech>You should take care of yourself, $PLAYER_NAME. Also, we'll meet you at Lansoil Town, if you find out anything more about those guys.</speech>
            <speech>Anyway, peace!</speech>
        </speeches>
        <speeches id="3">
            <speech></speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
          <speech></speech>
        </speeches>
        <speeches id="2">
            <speech>You heard the man - time to go!</speech>
            <speech>We'll tell you if we find anything back in that old cavern, so you can go on ahead. We've already got the 5th badge, so we can let you play catch-up.</speech>
            <speech>Laters!</speech>
        </speeches>
        <speeches id="3">
            <speech></speech>
        </speeches>
    </conversation>
</npcs>
