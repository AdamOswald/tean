<npcs>
    <npc direction="DOWN" id="10001" name="Sailor Silva" sprite="11" x="13" y="7">
        <speech>I come from a very far town - Sunshire Town.</speech>
        <speech>This city seems quite a good place to spend my vacations with my family.</speech>
    </npc>
    <npc direction="LEFT" id="10002" name="Explorer Monteiro" sprite="20" x="27" y="31">
        <speech>I had no clue how to solve Scorched's Desert mysteries, so I decided to ask my friend Silva to travel
            with me.
        </speech>
        <speech>My goal is to play the detective and I might find anything useful all around the world.</speech>
        <speech>Until I solve all mysteries of my native town...</speech>
    </npc>
    <npc direction="LEFT" id="10003" name="Brandy" randomRotation="true" sprite="82" x="47" y="30">
        <speech>Awww, this park is full of beautiful flowers!</speech>
    </npc>
    <npc direction="DOWN" id="10004" name="Mark" randomRotation="true" sprite="72" x="56" y="32">
        <speech>Step away, I am meditating.</speech>
    </npc>
    <npc direction="LEFT" id="10005" name="Sports Addict Brenda" randomRotation="true" sprite="80" x="54" y="22">
        <speech>This floor is great for skating, wooooh!</speech>
    </npc>
    <conversation id="1">
        <speeches id="1">
            <speech>I came with my dad to catch some bug Pokémon, bug Pokémon are awesome!</speech>
        </speeches>
        <speeches id="2">
            <speech>You just got lucky! Hmph!"</speech>
        </speeches>
        <speeches id="3">
            <speech>I have to find more Pokémon than my dad!</speech>
        </speeches>
        <speeches id="4">
            <speech>Hehehe, you're good! But I was better!!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Hey, did you see those new gadgets in the market? They're neet! But so are my Pokemon!</speech>
        </speeches>
        <speeches id="2">
            <speech>I guess i need to do more research!</speech>
        </speeches>
        <speeches id="3">
            <speech>*Checks PokePad* It will be On-line sale?? I have to rush home!</speech>
        </speeches>
        <speeches id="4">
            <speech>We are electric!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Some of my friends have decided to stick into training rooms helping others, but I prefer using my
                skills in the outside world, you get to meet more people.
            </speech>
        </speeches>
        <speeches id="2">
            <speech>You're stronger than I thought, I guess I need to take this more seriously.</speech>
        </speeches>
        <speeches id="3">
            <speech>I have to train harder...</speech>
        </speeches>
        <speeches id="4">
            <speech>Is that all you can do? I am sure you can do better.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Oh? So you've met that happy-go-lucky couple colleagues of mine? So you know what we Rangers do.
            </speech>
        </speeches>
        <speeches id="2">
            <speech>No wonder you got past those two, you're truly strong, with you on the mountain ranger i can feel at
                ease, you seem like rather a good person!
            </speech>
        </speeches>
        <speeches id="3">
            <speech>Be careful up ahead, it gets colder!</speech>
        </speeches>
        <speeches id="4">
            <speech>You almost had me there! Your Pokémon are strong and so are you, come around again if you want a
                rematch, always happy to see strong trainers!
            </speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Oh I see you've already met my son, Max, did he cause you trouble?</speech>
            <speech>Hehe, we're both over enthusiastic when it comes to Bug Pokémon, come on, let's battle as well!
            </speech>
        </speeches>
        <speeches id="2">
            <speech>Good, good, you're very capable, if you also beat my son, I can only imagine how he acted, he
                absolutely hates losing!
            </speech>
        </speeches>
        <speeches id="3">
            <speech>Well, I'll just take it slowly and let Max get more Pokémon than me, I can't handle his whining if
                he loses to me again.... *sigh*
            </speech>
        </speeches>
        <speeches id="4">
            <speech>Well, I wasn't going to be as easy as my Son!</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="6">
        <speeches id="1">
            <speech>Hey there. Could you help me defeat this grunts?</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="7">
        <speeches id="1">
            <speech>It will be better if you don't interfere with our business ...</speech>
        </speeches>
        <speeches id="2">
            <speech>Interesting. I underestimated you. Don't feel happy though, our boss is way stronger than I am.
            </speech>
        </speeches>
        <speeches id="3">
            <speech/>
        </speeches>
        <speeches id="4">
            <speech>Hmph ... you're so pitifully weak.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="10">
        <speeches id="1">
            <speech>Phew!!</speech>
            <speech>I just don't get it. I don't.</speech>
            <speech>I was peacefully passing by, and they started asking me about Ho-Oh.</speech>
            <speech>They said something about reviving someone.</speech>
            <speech>Makes no sense to me.</speech>
            <speech>Well we have to continue our journey.</speech>
            <speech>Ok ok I am not doing it again {EVENT=mood-4-11-20}</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="11">
        <speeches id="1">
            <speech>I should speak with $JVALOH_RIVAL before I leave the forst.</speech>
        </speeches>
    </conversation>
</npcs>
