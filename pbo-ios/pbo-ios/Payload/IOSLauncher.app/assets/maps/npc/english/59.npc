<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Kids shouldn't play with fire. It's dangerous</speech>
        </speeches>
        <speeches id="2">
            <speech>Ouch! You burnt me!</speech>
        </speeches>
        <speeches id="3">
            <speech>That was hot!</speech>
        </speeches>
        <speeches id="4">
            <speech>See, that's what I was talking about</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Are you surprised to see a Hiker in a volcano?</speech>
        </speeches>
        <speeches id="2">
            <speech>Doesn't seem like it, hehe.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hikers don't discriminate between mountains, so it's only natural for me to be here.</speech>
        </speeches>
        <speeches id="4">
            <speech>Looks like you were ... BAMBOOZLED!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>I have trained under the extreme heat, and it's time to show you the fruits of my labour. HYAA!
            </speech>
        </speeches>
        <speeches id="2">
            <speech>GYAH! I have failed ...</speech>
        </speeches>
        <speeches id="3">
            <speech>Must improve endurance!!</speech>
        </speeches>
        <speeches id="4">
            <speech>Hoo-hah!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>I'm on my way to challenge Blitz. But I don't mind a preparatory battle, so let's go!</speech>
        </speeches>
        <speeches id="2">
            <speech>That was ... onixpected.</speech>
        </speeches>
        <speeches id="3">
            <speech>Maybe I should hold-off on challenging Blitz for now.</speech>
        </speeches>
        <speeches id="4">
            <speech>That spells VICTORY!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>The life of a backpacker isn't easy.</speech>
            <speech>What do I mean? Uhm, well, you see ...</speech>
            <speech>Eh, nevermind. Time to battle!</speech>
        </speeches>
        <speeches id="2">
            <speech>Enduring losses is hard.</speech>
        </speeches>
        <speeches id="3">
            <speech>What do you mean by "you're a sore loser"?!</speech>
        </speeches>
        <speeches id="4">
            <speech>This is proof of my hardships.</speech>
        </speeches>
    </conversation>
</npcs>
