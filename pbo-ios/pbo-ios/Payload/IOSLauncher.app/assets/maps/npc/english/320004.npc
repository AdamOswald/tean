<npcs>
    <npc direction="DOWN" id="1000" name="Rich Boy Herman" randomRotation="true" sprite="75" triggerX="3" triggerY="3" x="2" y="3">
        <speech>Go away.</speech>
    </npc>
    <conversation id="1">
        <speeches id="1">
            <speech>Would you be kind enough to help me?</speech>
            <speech>Some scoundrel stole my precious 'Medal Box' yesterday. I tried to ask him to give it back, but he refused.</speech>
            <speech>That box really holds a lot of dear memories for me, but I don't possess the strength to take it back from that thief.</speech>
            <speech>Could you, perhaps, try to take it back from him? I would imagine he'll be at the abandoned parking lot in the northern side of the town, where all those goons are.</speech>
            <speech>I'd understand if you choose not to help me. It is, after all, a dangerous task.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Would you be kind enough to help me?</speech>
            <speech>Some scoundrel stole my precious 'Medal Box' yesterday. I tried to ask him to give it back, but he refused.</speech>
            <speech>That box really holds a lot of dear memories for me, but I don't posses the strength to take it back from that thief.</speech>
            <speech>Could you, perhaps, try to take it back from him? I would imagine he'll be at the abandoned parking lot in the northern side of the town, where all those goons are.</speech>
            <speech>I'd understand if you choose not to help me. It is, after all, a dangerous task.</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh my, you managed to retrieve my 'Medal Box'?!</speech>
            <speech>May I please have it?</speech>
        </speeches>
        <speeches id="3">
            <speech>Why would you give an old man hope, only to take it away?</speech>
        </speeches>
        <speeches id="4">
            <speech>Thank you so, so much! I don't have much to give you, but here, take these Devon Scope(s).</speech>
            <speech>These are special editions of the original Devon Scope, with the unique ability to sense Pokemon who may have hidden behind some kind of illusion or mirage of their own creation.</speech>
        </speeches>
        <speeches id="5">
            <speech>I simply cannot thank you enough for this! I wish you all the very best!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>You! You scoundrel.</speech>
            <speech>You ruined our plan.</speech>
            <speech>We were about done here. All we needed was to kidnap the rich kids.</speech>
            <speech>I will now go and meet our supervisor in Glassmoor City and make sure you are dealth with once and for all.</speech>
            <speech>Start counting your last few days in Jvaloh, you idiot!</speech>
        </speeches>
    </conversation>
</npcs>
