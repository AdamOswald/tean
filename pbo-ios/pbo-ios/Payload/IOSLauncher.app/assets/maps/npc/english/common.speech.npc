<npcs>
    <conversation id="TELEPORT_QUESTION">
        <speech>Abra... Kadabra..... Alakazam.......</speech>
        <speech>Want to see magic and travel to another land?</speech>
    </conversation>

    <conversation id="TELEPORTER_NO_REPLY">
        <speech>That's unfortunate. Please come back whenever you wish to travel elsewhere.</speech>
    </conversation>

    <conversation id="BANK_QUESTION">
        <speech>Greetings! Welcome to the Bank of PBO's ATM system!</speech>
        <speech>Would you like to withdraw or deposit money?</speech>
    </conversation>

    <conversation id="BANK_NO_REPLY">
        <speech>Please return whenever you wish to make a transaction.</speech>
    </conversation>

    <conversation id="BANK_NO_MEMBERSHIP">
        <speech>This feature is available only to people with a &apos;PBO membership&apos;.</speech>
        <speech>For all non-members, you can use our other free to use terminals.</speech>
    </conversation>

    <conversation id="SEEKER_NOT_READY">
        <speech>I find it very brave of you to challenge someone much stronger than you.</speech>
        <speech>Unfortunately, I don't like wasting my time over weaklings.</speech>
    </conversation>

    <conversation id="SEEKER_BEFORE_BATTLE">
        <speech>So you dare to challenge the clan of the strongest of strongest in PBO?</speech>
        <speech>Let's see what you have got kid.</speech>
    </conversation>

    <conversation id="SEEKER_LOSS">
        <speech>I am impressed $PLAYER_NAME.</speech>
        <speech>Let's have a rematch later. I need more practice.</speech>
    </conversation>

    <conversation id="SEEKER_VICTORY">
        <speech>I warned you. Now pay me a fat sum of money for using my time.</speech>
    </conversation>

    <conversation id="SEEKER_NEED_CHARGE">
        <speech>I need some time to get ready for another battle. Why are you being so impatient?</speech>
    </conversation>

    <conversation id="NO_FISHING_ROD_IN_BAG">
        <speech>Hey, kid. I'm the local expert on fishing rods. I heard fishing rods are being given away in Jubilife
            City.
        </speech>
    </conversation>
    <conversation id="FISHING_INTRO_QUES">
        <speech>Hey, there. I'm the local expert on fishing rods. I can fix up your fishing rod if you'd like? For a
            fee, of course.
        </speech>
        <speech>Would you like to repair your rod for 500 F?</speech>
    </conversation>
    <conversation id="FISHING_PLAYER_SAYS_YES">
        <speech>Congratulations, your fishing rod was successfully repaired!</speech>
    </conversation>
    <conversation id="FISHING_PLAYER_SAYS_NO">
        <speech>Come back if you need your rod repaired.</speech>
    </conversation>
    <conversation id="ROD_NEEDS_MAINTENANCE">
        <speech>Your rod is in perfect shape already! Come back when it needs fixing.</speech>
    </conversation>
    <conversation id="MAINTENANCE_CRITERIA_FAILURE">
        <speech>Oops, you don't have enough F to repair your rod.</speech>
    </conversation>

    <conversation id="HEALER_NO_MEMBERSHIP">
        <speech>Oh, I can only heal your pokemon if you have PBO membership. You can buy one from Donator Shop.</speech>
    </conversation>

    <conversation id="SEEKER_MISSING">
        <speech>You currently do not have a Vs. Seeker in your bag.</speech>
    </conversation>

    <conversation id="CW_NOT_RUNNING">
        <speech>Crew Wars is not running.</speech>
    </conversation>

    <conversation id="COME_TOMORROW_MAZE">
        <speech>It is not safe to go to the Legendary Caverns anymore. Please come back tomorrow.</speech>
    </conversation>

    <conversation id="MAZE_LEGENDARY_ALREADY_BATTLED">
        <speech>**The Pokemon doesn't seem to be acknowledging you anymore.**</speech>
    </conversation>

    <conversation id="LEGENDARY_HEAL_QUESTION">
        <speech>Do you want to heal your Pokemon? Remember that every heal you use will lower your chance to get a legendary drop.</speech>
    </conversation>

    <conversation id="LEGENDARY_HEAL_QUESTION">
        <speech>Do you want to heal your Pokemon? Remember that every heal you use will lower your chance to get a legendary drop.</speech>
    </conversation>

    <conversation id="LEGENDARY_HEAL_QUESTION">
        <speech>Do you want to heal your Pokemon? Remember that every heal you use will lower your chance to get a legendary drop.</speech>
    </conversation>

    <conversation id="LEGENDARY_HEAL_QUESTION">
        <speech>Do you want to heal your Pokemon? Remember that every heal you use will lower your chance to get a legendary drop.</speech>
    </conversation>

    <conversation id="LEGENDARY_HEAL_YES">
        <speech>There you go. All your Pokemon are now healed.</speech>
    </conversation>

    <conversation id="LEGENDARY_HEAL_NO">
        <speech>Good choice tough cookie.</speech>
    </conversation>

    <conversation id="LEGENDARY_PVP_BEFORE_BATTLE">
        <speech>So you want to battle me? All right, lets do it!</speech>
    </conversation>

    <conversation id="LEGENDARY_PVP_VICTORY">
        <speech>Pretty strong!</speech>
    </conversation>

    <conversation id="LEGENDARY_PVP_LOSS">
        <speech>Very weak!</speech>
    </conversation>

    <conversation id="LEGENDARY_PVP_NOT_BATTLING">
        <speech>I am currently not the mood to battle you.</speech>
    </conversation>

    <conversation id="LEGENDARY_BOSS_WARP_PVP_NPC_PENDING">
        <speech>I cannot take you to the legendary cavern until you defeat all my brothers and show me that you are powerful enough.</speech>
    </conversation>

    <conversation id="FRONTIER_COME_BACK_MONDAY">
        <speech>Champion, the trainers are tired of losing to you and they are not willing to battle anymore.</speech>
        <speech>Please come back on Monday when they will be willing to battle you again.</speech>
    </conversation>

    <conversation id="FRONTIER_LEVEL_NOT_CLEARED">
        <speech>Sorry young trainer but I cannot let you pass until you defeat the champion of the current level.</speech>
    </conversation>

    <conversation id="FRONTIER_LEVEL_CLEARED">
        <speech>Young trainer, you have already defeated me. Go and try challenging bosses of higher level.</speech>
    </conversation>

    <conversation id="FRONTIER_PARTY_INFO">
        <speech>You have more than 3 Pokemon in party.</speech>
    </conversation>

    <conversation id="FRONTIER_CHALLENGE_BOSS_LEVEL_BATTLES_OVER">
        <speech>Trainer, you have defeated me more than enough times now. Please go and challenge the boss.</speech>
    </conversation>

    <conversation id="FRONTIER_PREVIOUS_LEVELS_NOT_CLEARED">
        <speech>You need to defeat bosses of previous levels before you can challenge me.</speech>
    </conversation>

    <conversation id="FRONTIER_BEFORE_BATTLE">
        <speech>Hello youngster, lets battle!</speech>
    </conversation>

    <conversation id="FRONTIER_LOSS">
        <speech>That must have been a fluke.</speech>
    </conversation>

    <conversation id="FRONTIER_VICTORY">
        <speech>Train harder or go home.</speech>
    </conversation>

    <conversation id="FRONTIER_CANNOT_CHALLENGE_BOSS">
        <speech>You need to defeat my apprentice 20 times in order to challenge me.</speech>
    </conversation>

    <conversation id="FRONTIER_USED_SPECIES_OR_TRADED_POKEMON">
        <speech>You either have a Pokemon which was used in previous frontier or you got via trade which was used in frontier recently.</speech>
        <speech>You can use these Pokemon after the next frontier reset which happens every Monday.</speech>
        <speech>Change your party in order to battle me.</speech>
    </conversation>

    <conversation id="BT_BEFORE_BATTLE">
        <speech>So you want to beat me and make a streak? All right, try me!</speech>
    </conversation>

    <conversation id="BT_NPC_LOSS">
        <speech>You have won $WIN_STREAK battle(s) consecutively. Damn!</speech>
    </conversation>

    <conversation id="BT_NPC_VICTORY">
        <speech>Very weak! Now start from 0 HAHAHA!</speech>
    </conversation>

    <conversation id="WITH_GOODWILL_TOKEN_SPEECH">
        <speech>Hello $PLAYER_NAME. Thanks for making PBO a better experience for other players.</speech>
        <speech>For your contribution we would like to offer you some Goodwill Tokens.</speech>
        <speech>These tokens can be exchanged for exclusive items.</speech>
        <speech>You have total $GOODWILL_TOKENS to claim.</speech>
        <speech>Do you want to claim your $GOODWILL_TOKENS goodwill tokens?</speech>
    </conversation>

    <conversation id="NO_GOODWILL_TOKEN_SPEECH">
        <speech>Hello $PLAYER_NAME. Thanks for playing PBO.</speech>
        <speech>You currently have no goodwill tokens to claim.</speech>
        <speech>You can get them by Donating to Priests, using Experience Boosts, Lures, Swarm Flutes, Map Bombs and Item Bombs.</speech>
    </conversation>

    <conversation id="GOODWILL_TOKENS_CLAIM_YES">
        <speech>Once again thank you. See you again.</speech>
    </conversation>

    <conversation id="GOODWILL_TOKENS_CLAIM_NO">
        <speech>No worries! You can come back anytime if you want to claim your tokens.</speech>
    </conversation>

    <conversation id="REGION_BANNED_POKEMON_IN_PARTY">
        <speech>You currently have Pokémon in your party which violates the current region laws.</speech>
        <speech>The laws state that you cannot carry any Pokémon into this region from previous region which are above the level criteria.</speech>
        <speech>The level criteria is calculated by the amount of badges you have in the next region + 5.</speech>
        <speech>So if you have 0 badges in the next region, you can carry level 5 max.</speech>
        <speech>Once you defeat Elite 4 in the next region, you can carry any Pokémon from previous region without any restrictions.</speech>
    </conversation>
</npcs>