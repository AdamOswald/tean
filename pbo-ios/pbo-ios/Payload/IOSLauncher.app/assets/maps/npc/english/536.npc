<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>But boy, this Galactic Bomb packs a pretty big wallop.</speech>
            <speech>With this baby here there's not much we can't blow up.</speech>
            <speech>I wonder what they have planned for this.</speech>
        </speeches>
        <speeches id="2">
            <speech>Graw! You were eavesdropping! I was just thinking out loud!</speech>
            <speech>You're a persistent pest... I'm getting tired of running away...</speech>
            <speech>But I'm not going to waste my energy knocking you around...</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Hello, my friend! The cargo that the Team Galactic brought is worrisome, so I have come.</speech>
            <speech>...You say the cargo, it was a bomb? And there was an explosion?</speech>
            <speech>The explosion was at the Great Marsh? Furthermore, you are pursuing a man...</speech>
            <speech>A man with funny bowl-cut hair. In an outfit that is very strange? In other words, that is the Team Galactic!</speech>
            <speech>Oh, no, no, no! How did I miss it? Ah, Looker, this time you have made a mistake of the ages!</speech>
            <speech>The man, who I have seen running away, he was the bearer of the bomb! Ach! This will not do! Wait! Wait, I say!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>...Pant...pant...</speech>
            <speech>...Why am I running like this anyway?!</speech>
            <speech>The new world... The new universe that our boss was talking about...</speech>
            <speech>It's making me giddy thinking about it... When we use this thing...</speech>
        </speeches>
        <speeches id="2">
            <speech>Gweh! You were eavesdropping! I was only talking to myself!</speech>
            <speech>You're persistent, too...</speech>
            <speech>I'm popped out from all the running...</speech>
            <speech>But, I'm not... Going to battle you...</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>If you slacked off on your studies, you've got no chance. Capable girls like me are capable.</speech>
        </speeches>
        <speeches id="2">
            <speech>When you lose, do you go so far as to analyze the reason for your defeat and review your performance?</speech>
        </speeches>
        <speeches id="3">
            <speech>When you lose, do you go so far as to analyze the reason for your defeat and review your performance?</speech>
        </speeches>
        <speeches id="4">
            <speech>If you waste all of your time, you'll never grow as a Trainer.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>I'll give you a battle worthy of a battle-school valedictorian!</speech>
        </speeches>
        <speeches id="2">
            <speech>Wh-where do you study? I want to study there, too!</speech>
        </speeches>
        <speeches id="3">
            <speech>Wh-where do you study? I want to study there, too!</speech>
        </speeches>
        <speeches id="4">
            <speech>Now do you understand the ability of someone who's at the head of the class?</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>It bothers me that people always misunderstand me. I'm a lot more pure than everyone thinks.</speech>
        </speeches>
        <speeches id="2">
            <speech>I really don't want my skin to burn, so I want to stay in the shade while I work.</speech>
        </speeches>
        <speeches id="3">
            <speech>I really don't want my skin to burn, so I want to stay in the shade while I work.</speech>
        </speeches>
        <speeches id="4">
            <speech>My body and mind aren't necessarily always in sync.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Adults don't say what they're really thinking, OK? You have to read between the lines to find the truth.</speech>
        </speeches>
        <speeches id="2">
            <speech>Well done! You were lovely! I can't imitate that!</speech>
        </speeches>
        <speeches id="3">
            <speech>Well done! You were lovely! I can't imitate that!</speech>
        </speeches>
        <speeches id="4">
            <speech>Uh-oh! You're OK, aren't you? Sorry I flew into a rage!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>There is a massive blackout which is troubling Sunyshore City.</speech>
            <speech>Visitors are currently restricted from entering.</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Harambe" randomRotation="false" sprite="10" x="51" y="17">
        <speech>They say that there's a very rare Hidden Machine that exist that would allow one to scale these identations in this rock wall here.</speech>
        <speech>Naturally, this would be with the aid of a Pokemon, which would make this far more convenient than doing it yourself like us hikers... hohoho!!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="2" name="Garrick" randomRotation="true" sprite="25" x="39" y="38">
        <speech>I wish there were more trees here...</speech>
        <speech>I just want to find a lot of really cool bug Pokemon...</speech>
        <speech>I hear there are a lot more trees in Jvaloh.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="3" name="Corianne" randomRotation="true" sprite="53" x="42" y="31">
        <speech>I am trying to decide if I should go and get my bikini and sunbathe... It's such a nice day out.</speech>
    </npc>
    <movingNpc direction="RIGHT" id="4" name="Jasmine" shouldSleep="" speed="1" sprite="36" type="npc" x="67" y="25">
        <path>RIGHTx3, LEFTx3</path>
        <onCollisionSpeech gap="4">I'm running here!</onCollisionSpeech>
        <speech>I need to run! If I don't, I just feel like I haven't done enough for the day! I'll have too much energy!</speech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="5" name="Nurse Joy" randomRotation="false" sprite="3" x="61" y="18">
        <speech>Not all of us Nurses are stuck behind a counter in a Pokémon Center!!</speech>
        <speech>I'm on vacation! This is one of the best spots in town!</speech>
    </npc>
    <npc direction="UP" hidden="false" id="6" name="Carrie" randomRotation="false" sprite="12" x="55" y="38">
        <speech>I'm here on a school trip. but i've gotten myself a bit lost.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="7" name="Walter" randomRotation="true" sprite="5" x="73" y="31">
        <speech>I'm surprised you made it down here, kid.</speech>
        <speech>You must be quite the trainer, to have made it down here.</speech>
        <speech>I specifically purchased this house to avoid having many people on my doorstep... but I guess you've earned it.</speech>
    </npc>
    <movingNpc direction="RIGHT" id="8" name="Leeann" shouldSleep="" speed="1" sprite="96" type="npc" x="72" y="58">
        <path>RIGHTx2, LEFTx2</path>
        <onCollisionSpeech gap="4">Don't step on my sand castle!</onCollisionSpeech>
        <speech>Oh I just love the beach! It's so fun to build sandcastles and play with your friends.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="9" name="Donny" randomRotation="false" sprite="16" x="61" y="68">
        <speech>I love fishing, unfortunately those kids are being quite loud and making it hard to get my catch of the day!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="10" name="Micheal" randomRotation="true" sprite="16" x="13" y="74">
        <speech>My buddy fishes over on the other side of the coast, I always seem to have more luck than he does with finding good catches though.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="11" name="Morgan" randomRotation="false" sprite="19" x="42" y="62">
        <speech>I worked for three years to take a vacation here, I really needed it. Truly.</speech>
        <speech>Being a professional level employee really does take it's toll.</speech>
    </npc>
</npcs>
