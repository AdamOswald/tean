<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>I'm working very hard, but that doesn't mean that I'm strong.</speech>
        </speeches>
        <speeches id="2">
            <speech>You're a smart Trainer, considering you don't know very much.</speech>
        </speeches>
        <speeches id="3">
            <speech>You're a smart Trainer, considering you don't know very much.</speech>
        </speeches>
        <speeches id="4">
            <speech>What?! Even I can lose?! But I'm a battling genius!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>It's merely a Pokémon battle, right? Why so serious?</speech>
        </speeches>
        <speeches id="2">
            <speech>It's not like you really lose anything when you lose. As long as you enjoy it, that's enough.</speech>
        </speeches>
        <speeches id="3">
            <speech>It's not like you really lose anything when you lose. As long as you enjoy it, that's enough.</speech>
        </speeches>
        <speeches id="4">
            <speech>So what if you lose? It's not like there's any money in winning.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Oh, I see. Would you like to be cut to pieces? Or do you prefer the role of punching bag?</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmmm... If I was going to lose anyway, I was hoping to get totally messed up in the process.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmmm... If I was going to lose anyway, I was hoping to get totally messed up in the process.</speech>
        </speeches>
        <speeches id="4">
            <speech>You didn't decide quickly enough, so you got a little from column A and a little from column B.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>There's nothing to do but battle... For us...</speech>
        </speeches>
        <speeches id="2">
            <speech>I wonder if we could have been friends if we had met in a world with no battles...</speech>
        </speeches>
        <speeches id="3">
            <speech>I wonder if we could have been friends if we had met in a world with no battles...</speech>
        </speeches>
        <speeches id="4">
            <speech>This result... is not what I'd hoped for...</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>The weather's too awful for me to work! I'm just amusing myself here.</speech>
        </speeches>
        <speeches id="2">
            <speech>If only my Ability were Rain Dish...</speech>
        </speeches>
        <speeches id="3">
            <speech>If only my Ability were Rain Dish...</speech>
        </speeches>
        <speeches id="4">
            <speech>Whoa! I'm in a Sunny Day kind of mood!!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>I sure would like to do the fighting instead of my Pokémon, if I could.</speech>
        </speeches>
        <speeches id="2">
            <speech>Heh...</speech>
        </speeches>
        <speeches id="3">
            <speech>Heh...</speech>
        </speeches>
        <speeches id="4">
            <speech>Ah, I tingle with excitement. I sure would like to fight...</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>You have your way. And I have my way.</speech>
        </speeches>
        <speeches id="2">
            <speech>Your way must be rocky. Good luck to you. I am behind you all the way.</speech>
        </speeches>
        <speeches id="3">
            <speech>Your way must be rocky. Good luck to you. I am behind you all the way.</speech>
        </speeches>
        <speeches id="4">
            <speech>I will go my way because I don't have any other way.</speech>
        </speeches>
    </conversation>
</npcs>
