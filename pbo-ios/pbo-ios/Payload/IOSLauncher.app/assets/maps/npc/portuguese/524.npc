<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Hi, $PLAYER_NAME! How's your Pokédex coming along?</speech>
            <speech>Me? I'm somewhere between fantastic and, uh, hopeless...</speech>
            <speech>But this isn't about me! I've got something nice for you.</speech>
            <speech>This is a Vs. Seeker with which you can find Trainers who want a rematch with you.</speech>
            <speech>Let's keep working on our Pokédexes. Professor Rowan is counting on us!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>You need 2 badges to go any further.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Go, my precious Pokémon! To battle! Rush the enemy!</speech>
        </speeches>
        <speeches id="2">
            <speech>I won't cry... I won't. Someday, I will win.</speech>
        </speeches>
        <speeches id="3">
            <speech>I won't cry... I won't. Someday, I will win.</speech>
        </speeches>
        <speeches id="4">
            <speech>My Pokémon are the mightiest! I shall carve my name in history!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Preschooler gonna battle you! Oh yeah! Nice to meet you.</speech>
        </speeches>
        <speeches id="2">
            <speech>Da Preschooler lost! Tank you anyways!</speech>
        </speeches>
        <speeches id="3">
            <speech>Da Preschooler lost! Tank you anyways!</speech>
        </speeches>
        <speeches id="4">
            <speech>Little baby is a winna! Tank you! Tank you!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>I am no mere Hiker. Call me an alpinist.</speech>
        </speeches>
        <speeches id="2">
            <speech>A specialist in mountainous matters. That's an alpinist.</speech>
        </speeches>
        <speeches id="3">
            <speech>A specialist in mountainous matters. That's an alpinist.</speech>
        </speeches>
        <speeches id="4">
            <speech>A mountain maniac like me is properly called an alpinist.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>No need to waste time saying hello. Bring it on whenever you're ready!</speech>
        </speeches>
        <speeches id="2">
            <speech>I won't lose next time! Let's battle again sometime!</speech>
        </speeches>
        <speeches id="3">
            <speech>I won't lose next time! Let's battle again sometime!</speech>
        </speeches>
        <speeches id="4">
            <speech>What a match! I'm quite satisfied with the result.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>If you want to reach the peak as a Trainer, you'll have to climb over me!</speech>
        </speeches>
        <speeches id="2">
            <speech>Go! You've gotta go! Go on and leave me!</speech>
        </speeches>
        <speeches id="3">
            <speech>Go! You've gotta go! Go on and leave me!</speech>
        </speeches>
        <speeches id="4">
            <speech>Even if you run into me disastrously, there's no rescue team on its way!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>The adrenaline is pumping in my team! Me, too! I'll make this an awesome battle!</speech>
        </speeches>
        <speeches id="2">
            <speech>I did what I came to do, and this is how it turned out. There's nothing else to say.</speech>
        </speeches>
        <speeches id="3">
            <speech>I did what I came to do, and this is how it turned out. There's nothing else to say.</speech>
        </speeches>
        <speeches id="4">
            <speech>How about it? We're awesome, right? You were able to explode, weren't you?</speech>
        </speeches>
    </conversation>
</npcs>
