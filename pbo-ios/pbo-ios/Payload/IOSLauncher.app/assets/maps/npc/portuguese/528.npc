<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Hey there! I'm a Gardener! My scissors are my only real friends.</speech>
        </speeches>
        <speeches id="2">
            <speech>I knew I hated humans! All I need is scissors!</speech>
        </speeches>
        <speeches id="3">
            <speech>I knew I hated humans! All I need is scissors!</speech>
        </speeches>
        <speeches id="4">
            <speech>My specialty and my hobby are both cutting things! My favorite move with scissors is Guillotine!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>My strategy is to deceive my opponents with my speed.</speech>
        </speeches>
        <speeches id="2">
            <speech>How could you be quicker than me? What are you wearing?</speech>
        </speeches>
        <speeches id="3">
            <speech>How could you be quicker than me? What are you wearing?</speech>
        </speeches>
        <speeches id="4">
            <speech>Ahaha... How was it? I bet that made you dizzy.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>I came here for my big brother who always hides in his room.</speech>
        </speeches>
        <speeches id="2">
            <speech>I wish my big brother would come out of his room and play with me...</speech>
        </speeches>
        <speeches id="3">
            <speech>I wish my big brother would come out of his room and play with me...</speech>
        </speeches>
        <speeches id="4">
            <speech>My big brother, look outside for once! I won for you! So come out and play!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Here I go! I battle for the honor of the branch office!</speech>
        </speeches>
        <speeches id="2">
            <speech>Urk! F-farewell for now! I'll remember this, child!</speech>
        </speeches>
        <speeches id="3">
            <speech>Urk! F-farewell for now! I'll remember this, child!</speech>
        </speeches>
        <speeches id="4">
            <speech>I am a branch manager of the Pokémon Fan Cluband I won!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>When you're tired of training Pokémon, it's time to battle! That's the trick to working as a Breeder!</speech>
        </speeches>
        <speeches id="2">
            <speech>If I lose, that tells you I was just killing time. It doesn't damage my ego at all.</speech>
        </speeches>
        <speeches id="3">
            <speech>If I lose, that tells you I was just killing time. It doesn't damage my ego at all.</speech>
        </speeches>
        <speeches id="4">
            <speech>I'm so talented that I can win just to change my mood.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>I started skating because I'd heard that girls liked guys who skate. It's not working at all.</speech>
        </speeches>
        <speeches id="2">
            <speech>There are only so many places you can skate, anyway. Honestly, they're not useful for getting around.</speech>
        </speeches>
        <speeches id="3">
            <speech>There are only so many places you can skate, anyway. Honestly, they're not useful for getting around.</speech>
        </speeches>
        <speeches id="4">
            <speech>And I'm terrible at Pokémon battles, too! Now I'm never gonna get a girlfriend...</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>In my country, we say that white can hide all manner of sins. Isn't it great?</speech>
        </speeches>
        <speeches id="2">
            <speech>I don't care if I win or lose, as long as I can escape from this tedium.</speech>
        </speeches>
        <speeches id="3">
            <speech>I don't care if I win or lose, as long as I can escape from this tedium.</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh, forget it! I'm done with fancy clothes! I'm ditching this outfit and going to get a tan!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Scary places are the best to me. I'd love to live in a cemetery...</speech>
        </speeches>
        <speeches id="2">
            <speech>Defeating me is amazing! You must be kinda cursed, too!</speech>
        </speeches>
        <speeches id="3">
            <speech>Defeating me is amazing! You must be kinda cursed, too!</speech>
        </speeches>
        <speeches id="4">
            <speech>In a cemetery where the party begins after the day ends. Yes, that's the life for me...</speech>
        </speeches>
    </conversation>
</npcs>
