<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>I came here for my big brother who always hides in his room.</speech>
        </speeches>
        <speeches id="2">
            <speech>I wish my big brother would come out of his room and play with me...</speech>
        </speeches>
        <speeches id="3">
            <speech>I wish my big brother would come out of his room and play with me...</speech>
        </speeches>
        <speeches id="4">
            <speech>My big brother, look outside for once! I won for you! So come out and play!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>My Pokémon and I will take the liberty of using you to face off against.</speech>
        </speeches>
        <speeches id="2">
            <speech>I need to rethink my relationship with my Pokémon.</speech>
        </speeches>
        <speeches id="3">
            <speech>I need to rethink my relationship with my Pokémon.</speech>
        </speeches>
        <speeches id="4">
            <speech>I suppose it could be said that my relationship with my Pokémon is satisfactory for the time being.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>The pretty-suited Pokémon soldier who sprinkles love on the world appears!</speech>
        </speeches>
        <speeches id="2">
            <speech>Maybe I lose because I'm paying more attention to praying than to battling.</speech>
        </speeches>
        <speeches id="3">
            <speech>Maybe I lose because I'm paying more attention to praying than to battling.</speech>
        </speeches>
        <speeches id="4">
            <speech>I can't be defeated yet... I still have to protect all that is pretty in the world...</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>You seem quite confident. I'll sink you straightaway.</speech>
        </speeches>
        <speeches id="2">
            <speech>Yes... You have good Pokémon... Pokémon must be happy to be raised by you...</speech>
        </speeches>
        <speeches id="3">
            <speech>Yes... You have good Pokémon... Pokémon must be happy to be raised by you...</speech>
        </speeches>
        <speeches id="4">
            <speech>AAAH! I am sooo scared! I will never do it again... Sorry!</speech>
        </speeches>
    </conversation>
</npcs>
