<npcs>
    <npc direction="DOWN" hidden="false" id="1" name="Melissasa" randomRotation="false" sprite="45" x="25" y="32">
        <speech>Welcome to Floarama, the town of flowers, flowers, and more flowers!</speech>
        <speech>You should plant some flowers of your own, too. Yay for the flowers!</speech>
        <speech>sa</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Benjamin" shouldSleep="" speed="1" sprite="8" type="npc" x="19" y="22">
        <path>DOWNx1, RIGHTx2, UPx1, LEFTx2</path>
        <onCollisionSpeech gap="4">Yay!</onCollisionSpeech>
        <speech>Being surrounded by flowers puts me in an oddly pleasant mood.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="3" name="Katherine" sprite="6" x="27" y="17">
        <speech>The I love how the flowers look here!</speech>
        <speech>The Pokémon seem so happy playing them.</speech>
    </npc>
    <movingNpc direction="RIGHT" id="4" name="Joan" shouldSleep="" speed="1" sprite="14" type="npc" x="12" y="6">
        <path>RIGHTx5, LEFTx5</path>
        <onCollisionSpeech gap="4">Aaaaaaw!</onCollisionSpeech>
        <speech>I simply love it here...</speech>
        <speech>The atmosphere is so uplifting.</speech>
        <speech>You came to get emotionally healed too, didn't you?</speech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="5" name="Kyle" sprite="25" x="10" y="13">
        <speech>I got drawn here by the sweet scent of Honey...</speech>
        <speech>Seriously, what's that? What am I?</speech>
        <speech>A Pokémon or something? Mmm... Honey.</speech>
    </npc>
    <movingNpc direction="UP" id="6" name="Flabebe" shouldSleep="" speed="1" sprite="669" type="pokemon" x="24" y="9">
        <path>UPx3, RIGHTx2, DOWNx3, LEFTx2</path>
        <onCollisionSpeech gap="4">Fla! Fla! Fla!</onCollisionSpeech>
        <speech>Flabebe is so adorable, isn't she?</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="7" name="Vileplume" shouldSleep="" speed="1" sprite="45" type="pokemon" x="14" y="14">
        <path>RIGHTx2, LEFTx2</path>
        <onCollisionSpeech gap="4">Vile! Vile!</onCollisionSpeech>
        <speech>Vileplume looks so happy!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Vile" shouldSleep="" speed="1" sprite="45" type="pokemon" x="8" y="24">
        <path>DOWNx1, UPx1</path>
        <onCollisionSpeech gap="4">Vile!</onCollisionSpeech>
        <speech>Vileplume looks so happy!</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="9" name="Budew" shouldSleep="" speed="1" sprite="406" type="pokemon" x="4" y="37">
        <path>RIGHTx2, LEFTx2</path>
        <onCollisionSpeech gap="4">The Budew is happily playing in the grass!</onCollisionSpeech>
        <speech>Bu....dew!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Oddish" speed="1" sprite="43" type="pokemon" x="36" y="12">
        <path>DOWNx2, UPx2</path>
        <onCollisionSpeech gap="4">By stepping into the Oddish's path, you caused it to trip!</onCollisionSpeech>
        <speech>{SHAKE=1.2;0.30}The Oddish is running as fast as it can! It appears to be tripping occasionally.
        </speech>
    </movingNpc>
    <conversation id="3">
        <speeches id="2">
            <speech>Hi! I'm a PBO Tutorial campaign clown. Let's roll out my question!</speech>
            <speech>Can you participate in Bug Catching twice a week!</speech>
        </speeches>
        <speeches id="3">
            <speech>That's not the correct answer. Let's try again.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ding-ding!</speech>
            <speech>You're absolutely correct.</speech>
            <speech>You can participate in Bug Catching Contests twice every week!</speech>
            <speech>You can access the teleport to there in X! You should check it out!</speech>
        </speeches>
        <speeches id="5">
            <speech>Here you go! Please accept this Repel!</speech>
            <speech>With repels, you are free from finding wild Pokemon for 100 steps!</speech>
        </speeches>
    </conversation>
</npcs>
